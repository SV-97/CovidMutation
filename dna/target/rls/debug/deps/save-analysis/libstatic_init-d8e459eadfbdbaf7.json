{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1","program":"/home/sv-97/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","static_init","--edition=2018","/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=d8e459eadfbdbaf7","-C","extra-filename=-d8e459eadfbdbaf7","--out-dir","/home/sv-97/GitHub/CovidMutation/dna/target/rls/debug/deps","-L","dependency=/home/sv-97/GitHub/CovidMutation/dna/target/rls/debug/deps","--extern","bitflags=/home/sv-97/GitHub/CovidMutation/dna/target/rls/debug/deps/libbitflags-240d294e8e0ea2cd.rmeta","--extern","libc=/home/sv-97/GitHub/CovidMutation/dna/target/rls/debug/deps/liblibc-35b3358e62fd19b5.rmeta","--extern","static_init_macro=/home/sv-97/GitHub/CovidMutation/dna/target/rls/debug/deps/libstatic_init_macro-9131b23487acb081.so","--cap-lints","allow","--cfg","elf","--cfg","support_priority","--cfg","cxa_thread_at_exit","--error-format=json","--sysroot","/home/sv-97/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/sv-97/GitHub/CovidMutation/dna/target/rls/debug/deps/libstatic_init-d8e459eadfbdbaf7.rmeta"},"prelude":{"crate_id":{"name":"static_init","disambiguator":[6077076363977080395,18389759565027537745]},"crate_root":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src","external_crates":[{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4150165762619742282,10084428854705346699]}},{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17154149902455954331,10787439630250540476]}},{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3551889228217061522,18098948565341830907]}},{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","num":4,"id":{"name":"bitflags","disambiguator":[17038808608050869087,9139251180070239429]}},{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","num":5,"id":{"name":"static_init_macro","disambiguator":[2644840787714681161,6478752809211095786]}},{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","num":6,"id":{"name":"libc","disambiguator":[12876777517950043269,10217290137473922263]}}],"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":337,"byte_end":50631,"line_start":8,"line_end":1305,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1756},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":33517,"byte_end":33522,"line_start":770,"line_end":770,"column_start":16,"column_end":21},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":32},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":36446,"byte_end":36457,"line_start":852,"line_end":852,"column_start":28,"column_end":39},"alias_span":null,"name":"constructor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":37},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":37636,"byte_end":37646,"line_start":892,"line_end":892,"column_start":28,"column_end":38},"alias_span":null,"name":"destructor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":38},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":48598,"byte_end":48605,"line_start":1237,"line_end":1237,"column_start":28,"column_end":35},"alias_span":null,"name":"dynamic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1903},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49700,"byte_end":49711,"line_start":1262,"line_end":1262,"column_start":23,"column_end":34},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":278394,"byte_end":278404,"line_start":1613,"line_end":1613,"column_start":49,"column_end":59},"alias_span":null,"name":"LockedLazy","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2244},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":278629,"byte_end":278645,"line_start":1616,"line_end":1616,"column_start":44,"column_end":60},"alias_span":null,"name":"LesserLockedLazy","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279045,"byte_end":279061,"line_start":1623,"line_end":1623,"column_start":51,"column_end":67},"alias_span":null,"name":"PrimedLockedLazy","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2438},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279331,"byte_end":279353,"line_start":1626,"line_end":1626,"column_start":65,"column_end":87},"alias_span":null,"name":"PrimedLesserLockedLazy","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279604,"byte_end":279622,"line_start":1630,"line_end":1630,"column_start":45,"column_end":63},"alias_span":null,"name":"LockedLazyFinalize","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2632},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279918,"byte_end":279942,"line_start":1634,"line_end":1634,"column_start":52,"column_end":76},"alias_span":null,"name":"LesserLockedLazyFinalize","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2728},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":280378,"byte_end":280394,"line_start":1640,"line_end":1640,"column_start":43,"column_end":59},"alias_span":null,"name":"LockedLazyDroped","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2819},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":280677,"byte_end":280699,"line_start":1644,"line_end":1644,"column_start":50,"column_end":72},"alias_span":null,"name":"LesserLockedLazyDroped","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2915},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":281108,"byte_end":281130,"line_start":1651,"line_end":1651,"column_start":57,"column_end":79},"alias_span":null,"name":"PrimedLockedLazyDroped","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":3013},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":281442,"byte_end":281470,"line_start":1655,"line_end":1655,"column_start":71,"column_end":99},"alias_span":null,"name":"PrimedLesserLockedLazyDroped","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":3116},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":282091,"byte_end":282107,"line_start":1663,"line_end":1663,"column_start":62,"column_end":78},"alias_span":null,"name":"UnSyncLockedLazy","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":1927},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49822,"byte_end":49826,"line_start":1267,"line_end":1267,"column_start":16,"column_end":20},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49828,"byte_end":49838,"line_start":1267,"line_end":1267,"column_start":22,"column_end":32},"alias_span":null,"name":"LockedLazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49840,"byte_end":49850,"line_start":1267,"line_end":1267,"column_start":34,"column_end":44},"alias_span":null,"name":"LazyAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2066},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49883,"byte_end":49893,"line_start":1269,"line_end":1269,"column_start":16,"column_end":26},"alias_span":null,"name":"UnSyncLazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3116},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49895,"byte_end":49911,"line_start":1269,"line_end":1269,"column_start":28,"column_end":44},"alias_span":null,"name":"UnSyncLockedLazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1728},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":293052,"byte_end":293063,"line_start":1,"line_end":1,"column_start":23,"column_end":34},"alias_span":null,"name":"ConstStatic","value":"","parent":{"krate":0,"index":1702}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":293065,"byte_end":293071,"line_start":1,"line_end":1,"column_start":36,"column_end":42},"alias_span":null,"name":"Static","value":"","parent":{"krate":0,"index":1702}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":293073,"byte_end":293088,"line_start":1,"line_end":1,"column_start":44,"column_end":59},"alias_span":null,"name":"__set_init_prio","value":"","parent":{"krate":0,"index":1702}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":337,"byte_end":50631,"line_start":8,"line_end":1305,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":26},{"krate":0,"index":45},{"krate":0,"index":50},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":987},{"krate":0,"index":1134},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":3224},{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3246},{"krate":0,"index":3248},{"krate":0,"index":3255}],"decl_id":null,"docs":" Safe non const initialized statics and safe mutable statics with unbeatable performance.\n \n Also provides code execution at program start-up/exit.\n \n Why using non const initialized statics and safe mutable statics? Because all execution depends on state that is\n maintained during all program execution. Because it is very difficult than it looks-like\n to have an ergonomic, safe and with excellent performance solution for maintaining such state. \n \n # Feature\n \n - [x] non const initialized statics.\n - [x] statics dropped at program exit.\n - [x] safe mutable lazy statics (locked).\n - [x] every feature with `no_std` support.\n - [x] unbeatable performance, can be order of magnitude faster that any other solution.\n - [x] registration of code execution at program exit without allocation (as opposed to libc::at_exit).\n - [x] ergonomic syntax.\n - [x] sound and safe.\n - [x] on nigtly, `thread_locals` and safe mutable `thread_locals`, guaranteed to be\n     dropped at thread exit with the lowest possible overhead compared to\n     what is provided by system library thread support or the standard library!\n \n # Fastest Lazy Statics\n \n This crate provides *lazy statics* on all plateforms.\n \n On unixes and windows *lesser lazy statics* are *lazy* during program startup phase\n (before `main` is called). Once main is called, those statics are all guaranteed to be\n initialized and any access to them almost no incur any performance cost\n \n ```\n use static_init::{dynamic};\n \n #[dynamic] \n static L1: Vec<i32> = vec![1,2,3,4,5,6];\n \n #[dynamic(drop)] \n static mut L2: Vec<i32> = {let mut v = L1.clone(); v.push(43); v};\n ```\n \n Not even considering the speed-up due to early initialization, the access to those static\n can be 10x faster than what is provided by the standard library or other crates.\n \n # Safe Mutable Statics\n \n Just add the `mut` keyword to have mutable locked statics. Acces to them is safe.\n \n ```\n use static_init::{dynamic};\n \n #[dynamic] \n static mut L1: Vec<i32> = vec![1,2,3,4,5,6];\n \n //Mutable statics are safe to access\n #[dynamic] \n static mut L2: Vec<i32> = {\n    //get a unique lock:\n    let mut lock = L1.write(); \n    lock.push(42); \n    lock.clone()\n    };\n ```\n \n Those statics use an *apdaptative phase locker* that gives them surprising performance.\n \n # Classical Lazy statics \n \n By default, initialization of statics declared with `#[dynamic]` attribute is forced before main\n start on plateform that support it. If *lazyness* if a required feature, the attribute argument\n `lazy` can be used.\n \n ```rust\n use static_init::{dynamic};\n \n #[dynamic(lazy)] \n static L1: Vec<i32> = vec![1,2,3,4,5,6];\n \n #[dynamic(lazy,drop)] \n static mut L3: Vec<i32> =L1.clone(); \n ```\n \n Dropped statics must be mut. There is also a `finalize` attribute\n argument that can be used to run a \"drop\" equivalent at program exit that leaves the static unchanged. \n \n Those lazy statics also provide superior performances compared to other solutions.\n \n # Other features for lazy statics\n \n In the documentation of macro `dynamic` you will find how to:\n \n - declare statics that are poisoned if first initialization panics. (By default initialization is retried)\n \n - declare finalized or droped statics.\n \n - declare droped or finalized statics that tolerate to be leaked.\n \n - declare lazy statics that are also const initialized and provide a const fallback when their resource is released\n   at program/thread exit\n \n # `no_std` support\n \n On linux, android or Reddox (TBC) this library is `no_std`. The library use directly the `futex` system call\n to place thread in a wait queue when needed. This library may be use to implement replacement for libc runtime.\n \n On other plateform `no_std` support can be gain by using the `spin_loop` feature. NB that lock strategies\n based on spin loop are not system-fair and cause entire system slow-down.\n \n # Performant\n \n ## Under the hood\n \n The statics and mutable statics declared with `dynamic` attribute use what we\n call an  *adaptative phase locker*. This is a lock that is in between a `Once`\n and a `RwLock`. It is carefully implemented as a variation over the `RwLock`\n algorithms of `parking_lot` crate with other tradeoff and different\n capabilities. \n \n It is qualified *adaptative* because the decision to take a read lock,\n a write lock or not to take a lock is performed while the lock attempt is\n performed and a thread may attempt to get a write lock but decides to be waked\n as the owner of a read lock if it is about to be placed in a wait queue.\n \n Statics and thread locals that need to register themselve for destruction at\n program or thread exit are implemented as members of an intrusive list. This\n implementation avoid heap memory allocation caused by system library support\n (`libc::at_exit`, `glibc::__cxa_at_thread_exit`, pthread... registers use heap\n memory allocation), and it avoid to fall on system library implementation\n limits that may cause `thread_locals` declared with `std::thread_locals` not to\n be dropped. \n \n Last but not least of the optimization, on windows and unixes\n `#[dynamic]` statics initialization is forced before main start (NB `#[dynamic(lazy)]`). This fact unable\n a double check with a single boolean for all statics that is much faster other\n double check solution. On other plateforms `#[dynamic]` attributed statics will behave as `#[dynamic(lazy)]`\n statics.\n \n ## Benchmark results\n \n ### Lazy static access\n \n Th graph bellow showes the access time to lazy statics once they are initialized. The measurment includes statics from crates `double_checked_cell` and `lazy_static`.  In the legend \"LesserLazy\" are the lazy declared using `#[dynamic]` attribute and \"Lazy\" those declared with the\n attribute `#[dynamic(lazy)]`. On the horizontal axis is reported the number of thread that almost simultaneous attempt to access the lazy and the vertical axis the access time summed over all thread. \n \n Access time to lazy from this crates can be up to *10x faster* than other solutions.\n \n ![](docs/access.svg)\n \n ### Lazy static initialization\n \n #### Extremely short initization performance\n \n This graph showes the access time to lazy statics when the lazy is not yet\n initialized. The measurment includes statics from crates `double_checked_cell`\n and `lazy_static`.  In the legend \"LesserLazy\" are the lazy declared using\n `#[dynamic]` attribute and \"Lazy\" those declared with the attribute\n `#[dynamic(lazy)]`. On the horizontal axis is reported the number of thread\n that almost simultaneous attempt to access and initialize the lazy and the\n vertical axis the access time + initialization time overhead summed over all\n thread. The initialization in itself count for pico seconds. \"LesserLazy\" (`#[dynamic]) are\n not ploted here because they are initialized before main start but whatsoever,\n they use the exact same lock as that of \"Lazy\" (`#[dynamic(lazy)]`) statics.\n \n Initialization duration is *3x time faster* when using statics from this crates.\n \n ![](docs/init_nano.svg)\n \n #### Large initization performance\n \n In this case all thread attempt to initialize a static whose initialization takes\n approximately 20µs. Static from this crates scale much better on high contention. On high contention\n this crates provides a *10x speed-up*.\n \n ![](docs/init_20us.svg)\n \n ### Mutable Locked lazy access\n \n Mutable lazy from this crates are compared to an implementation using parking-lot crate `RwLock`. The implementation\n can be found in the source file `benches/multi_threaded/main.rs`.\n \n On the graph bellow the legend \"Locked Lazy\" are for mutable statics declared with `#[dynamic(lazy)]` attribute, \"LesserLocked Lazy\" those declared with `#[dynamic]`, \"LesserLocked LazyDrop\" those declared with `#[dynamic(drop)]` and \"Locked Lazy PkLot\" the one implemented using parking-lot crate `RwLock`.\n \n Mutable locked statics from this crates are close to *2x time faster* than the solution using parking-lot RwLock if the initialization is attempted throught an attempt to get a read lock (on the first graph). When initilization is attempted through an attempt to get a write lock all solutions are globaly equivalent.\n \n ![](docs/access_locked_read.svg)\n ![](docs/access_locked_write.svg)\n \n ### Mutable locked lazy static initialization\n \n #### Extremely short initization performance\n \n Here we compare access time when the lazy is not yet initialized. On high\n contention, when a high number of thread attempt to get a read lock while the\n lazy is not yet initialized, lazy declared with #[dynamic(lazy)] perform close\n to *100x time* `RwLock`. This is the concequence of the adaptative lock. On the\n other hand, on low contention, when only 1 or 2 thread are simultaneously\n attempting to initialize the static, this adaptative ness cause an increased\n initialization time. Nevertheless this is a one shot performance shift of a few\n nano seconds.\n \n ![](docs/init_locked_nano.svg)\n \n #### Large initialization time \n \n Here we compare access time + initialization time when the lazy is not yet initialized and when the initialization time is\n of the order of 20µs. When all threads attempt to initialize the statics while trying to get a write lock, the statics from \n this crate have similar performance as statics using parking_lot `RwLock`. But if such initialization is performed through attempt\n to get a read lock, statics from this crate are *200x time faster* than `RwLock`. This is also a concequence of the adaptative lock algorithm.\n \n ![](docs/init_locked_20us.svg)\n \n # Thread local support\n \n On nightly `thread_local` support can be enabled with the feature\n `thread_local`. The attribute `dynamic` can be used with thread locals as with\n regular statics. In this case, the mutable `thread_local` will behave similarly\n to a RefCell that initialize its content on the first acces and with the same\n syntax as mutable lazy statics.\n \n ```rust\n # #![cfg_attr(feature = \"thread_local\", feature(thread_local))]\n # use static_init::{Finaly,dynamic};\n # #[cfg(feature = \"thread_local\")]\n # mod m{\n # use static_init::{dynamic};\n \n #[dynamic(drop)] //guaranteed to be drop: no leak contrarily to std::thread_local\n #[thread_local]\n static V: Vec<i32> = vec![1,1,2,3,5];\n \n #[dynamic]\n #[thread_local]\n static mut W: Vec<i32> = V.clone();\n # fn main() { \n assert_ne!(W.read().len(), 0);\n assert_ne!(W.try_read().unwrap().len(), 0);\n # }\n # }\n ```\n \n # Unsafe Low level \n \n ## Unchecked statics initiliazed at program start up\n \n The library also provides unchecked statics, whose initialization is run before main start. Those statics\n does not imply any memory overhead neither execution time overhead. This is the responsability of the coder\n to be sure not to access those static before they are initialized. To be sound, all those statics are turned\n by the macro into mutable static to be sure all access to them is unsafe.\n \n ```rust\n use static_init::dynamic;\n \n #[dynamic(10)]\n static A: Vec<i32> = vec![1,2,3];\n \n #[dynamic(0,drop)]\n static mut B: Vec<i32> = unsafe {A.clone()};\n ```\n The number indicates the priority, the larger the number, the sooner the static will be initialized.\n \n Those statics can also be droped at program exit with the `drop` attribute argument.\n \n Those statics are only supported on unixes and windows but priority are not yet supported on Mac.\n \n ## Program constructor destructor \n \n It is possible to register fonction for execution before main start/ after main returns.\n \n ```rust\n use static_init::{constructor, destructor};\n \n #[constructor(10)]\n extern \"C\" fn run_first() {}\n \n #[constructor(0)]\n extern \"C\" fn then_run() {}\n \n #[destructor(0)]\n extern \"C\" fn pre_finish() {}\n \n #[destructor(10)]\n extern \"C\" fn finaly() {}\n ```\n \n # Debug support\n \n The feature `debug_order` can be activated to detect trouble with initialization order of raw\n statics or dead locks due to circular lazy initialization.\n","sig":null,"attributes":[{"value":"/ Safe non const initialized statics and safe mutable statics with unbeatable performance.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":337,"byte_end":429,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":430,"byte_end":434,"line_start":9,"line_end":9,"column_start":1,"column_end":5}},{"value":"/ Also provides code execution at program start-up/exit.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":435,"byte_end":493,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":494,"byte_end":498,"line_start":11,"line_end":11,"column_start":1,"column_end":5}},{"value":"/ Why using non const initialized statics and safe mutable statics? Because all execution depends on state that is","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":499,"byte_end":615,"line_start":12,"line_end":12,"column_start":1,"column_end":117}},{"value":"/ maintained during all program execution. Because it is very difficult than it looks-like","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":616,"byte_end":708,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ to have an ergonomic, safe and with excellent performance solution for maintaining such state. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":709,"byte_end":808,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":809,"byte_end":813,"line_start":15,"line_end":15,"column_start":1,"column_end":5}},{"value":"/ # Feature","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":814,"byte_end":827,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":828,"byte_end":832,"line_start":17,"line_end":17,"column_start":1,"column_end":5}},{"value":"/ - [x] non const initialized statics.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":833,"byte_end":873,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ - [x] statics dropped at program exit.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":874,"byte_end":916,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ - [x] safe mutable lazy statics (locked).","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":917,"byte_end":962,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ - [x] every feature with `no_std` support.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":963,"byte_end":1009,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ - [x] unbeatable performance, can be order of magnitude faster that any other solution.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1010,"byte_end":1101,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ - [x] registration of code execution at program exit without allocation (as opposed to libc::at_exit).","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1102,"byte_end":1208,"line_start":23,"line_end":23,"column_start":1,"column_end":107}},{"value":"/ - [x] ergonomic syntax.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1209,"byte_end":1236,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/ - [x] sound and safe.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1237,"byte_end":1262,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ - [x] on nigtly, `thread_locals` and safe mutable `thread_locals`, guaranteed to be","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1263,"byte_end":1350,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/     dropped at thread exit with the lowest possible overhead compared to","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1351,"byte_end":1427,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/     what is provided by system library thread support or the standard library!","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1428,"byte_end":1510,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1511,"byte_end":1515,"line_start":29,"line_end":29,"column_start":1,"column_end":5}},{"value":"/ # Fastest Lazy Statics","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1516,"byte_end":1542,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1543,"byte_end":1547,"line_start":31,"line_end":31,"column_start":1,"column_end":5}},{"value":"/ This crate provides *lazy statics* on all plateforms.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1548,"byte_end":1605,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1606,"byte_end":1610,"line_start":33,"line_end":33,"column_start":1,"column_end":5}},{"value":"/ On unixes and windows *lesser lazy statics* are *lazy* during program startup phase","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1611,"byte_end":1698,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/ (before `main` is called). Once main is called, those statics are all guaranteed to be","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1699,"byte_end":1789,"line_start":35,"line_end":35,"column_start":1,"column_end":91}},{"value":"/ initialized and any access to them almost no incur any performance cost","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1790,"byte_end":1865,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1866,"byte_end":1870,"line_start":37,"line_end":37,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1871,"byte_end":1878,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use static_init::{dynamic};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1879,"byte_end":1910,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1911,"byte_end":1915,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"/ #[dynamic] ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1916,"byte_end":1931,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/ static L1: Vec<i32> = vec![1,2,3,4,5,6];","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1932,"byte_end":1976,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1977,"byte_end":1981,"line_start":43,"line_end":43,"column_start":1,"column_end":5}},{"value":"/ #[dynamic(drop)] ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":1982,"byte_end":2003,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ static mut L2: Vec<i32> = {let mut v = L1.clone(); v.push(43); v};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2004,"byte_end":2074,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2075,"byte_end":2082,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2083,"byte_end":2087,"line_start":47,"line_end":47,"column_start":1,"column_end":5}},{"value":"/ Not even considering the speed-up due to early initialization, the access to those static","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2088,"byte_end":2181,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ can be 10x faster than what is provided by the standard library or other crates.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2182,"byte_end":2266,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2267,"byte_end":2271,"line_start":50,"line_end":50,"column_start":1,"column_end":5}},{"value":"/ # Safe Mutable Statics","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2272,"byte_end":2298,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2299,"byte_end":2303,"line_start":52,"line_end":52,"column_start":1,"column_end":5}},{"value":"/ Just add the `mut` keyword to have mutable locked statics. Acces to them is safe.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2304,"byte_end":2389,"line_start":53,"line_end":53,"column_start":1,"column_end":86}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2390,"byte_end":2394,"line_start":54,"line_end":54,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2395,"byte_end":2402,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use static_init::{dynamic};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2403,"byte_end":2434,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2435,"byte_end":2439,"line_start":57,"line_end":57,"column_start":1,"column_end":5}},{"value":"/ #[dynamic] ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2440,"byte_end":2455,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/ static mut L1: Vec<i32> = vec![1,2,3,4,5,6];","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2456,"byte_end":2504,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2505,"byte_end":2509,"line_start":60,"line_end":60,"column_start":1,"column_end":5}},{"value":"/ //Mutable statics are safe to access","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2510,"byte_end":2550,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ #[dynamic] ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2551,"byte_end":2566,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/ static mut L2: Vec<i32> = {","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2567,"byte_end":2598,"line_start":63,"line_end":63,"column_start":1,"column_end":32}},{"value":"/    //get a unique lock:","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2599,"byte_end":2626,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/    let mut lock = L1.write(); ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2627,"byte_end":2661,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/    lock.push(42); ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2662,"byte_end":2684,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"/    lock.clone()","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2685,"byte_end":2704,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/    };","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2705,"byte_end":2714,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2715,"byte_end":2722,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2723,"byte_end":2727,"line_start":70,"line_end":70,"column_start":1,"column_end":5}},{"value":"/ Those statics use an *apdaptative phase locker* that gives them surprising performance.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2728,"byte_end":2819,"line_start":71,"line_end":71,"column_start":1,"column_end":92}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2820,"byte_end":2824,"line_start":72,"line_end":72,"column_start":1,"column_end":5}},{"value":"/ # Classical Lazy statics ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2825,"byte_end":2854,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2855,"byte_end":2859,"line_start":74,"line_end":74,"column_start":1,"column_end":5}},{"value":"/ By default, initialization of statics declared with `#[dynamic]` attribute is forced before main","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2860,"byte_end":2960,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ start on plateform that support it. If *lazyness* if a required feature, the attribute argument","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":2961,"byte_end":3060,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/ `lazy` can be used.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3061,"byte_end":3084,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3085,"byte_end":3089,"line_start":78,"line_end":78,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3090,"byte_end":3101,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use static_init::{dynamic};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3102,"byte_end":3133,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3134,"byte_end":3138,"line_start":81,"line_end":81,"column_start":1,"column_end":5}},{"value":"/ #[dynamic(lazy)] ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3139,"byte_end":3160,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ static L1: Vec<i32> = vec![1,2,3,4,5,6];","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3161,"byte_end":3205,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3206,"byte_end":3210,"line_start":84,"line_end":84,"column_start":1,"column_end":5}},{"value":"/ #[dynamic(lazy,drop)] ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3211,"byte_end":3237,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/ static mut L3: Vec<i32> =L1.clone(); ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3238,"byte_end":3279,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3280,"byte_end":3287,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3288,"byte_end":3292,"line_start":88,"line_end":88,"column_start":1,"column_end":5}},{"value":"/ Dropped statics must be mut. There is also a `finalize` attribute","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3293,"byte_end":3362,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ argument that can be used to run a \"drop\" equivalent at program exit that leaves the static unchanged. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3363,"byte_end":3470,"line_start":90,"line_end":90,"column_start":1,"column_end":108}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3471,"byte_end":3475,"line_start":91,"line_end":91,"column_start":1,"column_end":5}},{"value":"/ Those lazy statics also provide superior performances compared to other solutions.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3476,"byte_end":3562,"line_start":92,"line_end":92,"column_start":1,"column_end":87}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3563,"byte_end":3567,"line_start":93,"line_end":93,"column_start":1,"column_end":5}},{"value":"/ # Other features for lazy statics","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3568,"byte_end":3605,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3606,"byte_end":3610,"line_start":95,"line_end":95,"column_start":1,"column_end":5}},{"value":"/ In the documentation of macro `dynamic` you will find how to:","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3611,"byte_end":3676,"line_start":96,"line_end":96,"column_start":1,"column_end":66}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3677,"byte_end":3681,"line_start":97,"line_end":97,"column_start":1,"column_end":5}},{"value":"/ - declare statics that are poisoned if first initialization panics. (By default initialization is retried)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3682,"byte_end":3792,"line_start":98,"line_end":98,"column_start":1,"column_end":111}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3793,"byte_end":3797,"line_start":99,"line_end":99,"column_start":1,"column_end":5}},{"value":"/ - declare finalized or droped statics.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3798,"byte_end":3840,"line_start":100,"line_end":100,"column_start":1,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3841,"byte_end":3845,"line_start":101,"line_end":101,"column_start":1,"column_end":5}},{"value":"/ - declare droped or finalized statics that tolerate to be leaked.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3846,"byte_end":3915,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3916,"byte_end":3920,"line_start":103,"line_end":103,"column_start":1,"column_end":5}},{"value":"/ - declare lazy statics that are also const initialized and provide a const fallback when their resource is released","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":3921,"byte_end":4040,"line_start":104,"line_end":104,"column_start":1,"column_end":120}},{"value":"/   at program/thread exit","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4041,"byte_end":4069,"line_start":105,"line_end":105,"column_start":1,"column_end":29}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4070,"byte_end":4074,"line_start":106,"line_end":106,"column_start":1,"column_end":5}},{"value":"/ # `no_std` support","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4075,"byte_end":4097,"line_start":107,"line_end":107,"column_start":1,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4098,"byte_end":4102,"line_start":108,"line_end":108,"column_start":1,"column_end":5}},{"value":"/ On linux, android or Reddox (TBC) this library is `no_std`. The library use directly the `futex` system call","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4103,"byte_end":4215,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/ to place thread in a wait queue when needed. This library may be use to implement replacement for libc runtime.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4216,"byte_end":4331,"line_start":110,"line_end":110,"column_start":1,"column_end":116}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4332,"byte_end":4336,"line_start":111,"line_end":111,"column_start":1,"column_end":5}},{"value":"/ On other plateform `no_std` support can be gain by using the `spin_loop` feature. NB that lock strategies","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4337,"byte_end":4446,"line_start":112,"line_end":112,"column_start":1,"column_end":110}},{"value":"/ based on spin loop are not system-fair and cause entire system slow-down.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4447,"byte_end":4524,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4525,"byte_end":4529,"line_start":114,"line_end":114,"column_start":1,"column_end":5}},{"value":"/ # Performant","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4530,"byte_end":4546,"line_start":115,"line_end":115,"column_start":1,"column_end":17}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4547,"byte_end":4551,"line_start":116,"line_end":116,"column_start":1,"column_end":5}},{"value":"/ ## Under the hood","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4552,"byte_end":4573,"line_start":117,"line_end":117,"column_start":1,"column_end":22}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4574,"byte_end":4578,"line_start":118,"line_end":118,"column_start":1,"column_end":5}},{"value":"/ The statics and mutable statics declared with `dynamic` attribute use what we","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4579,"byte_end":4660,"line_start":119,"line_end":119,"column_start":1,"column_end":82}},{"value":"/ call an  *adaptative phase locker*. This is a lock that is in between a `Once`","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4661,"byte_end":4743,"line_start":120,"line_end":120,"column_start":1,"column_end":83}},{"value":"/ and a `RwLock`. It is carefully implemented as a variation over the `RwLock`","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4744,"byte_end":4824,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ algorithms of `parking_lot` crate with other tradeoff and different","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4825,"byte_end":4896,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ capabilities. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4897,"byte_end":4915,"line_start":123,"line_end":123,"column_start":1,"column_end":19}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4916,"byte_end":4920,"line_start":124,"line_end":124,"column_start":1,"column_end":5}},{"value":"/ It is qualified *adaptative* because the decision to take a read lock,","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4921,"byte_end":4995,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ a write lock or not to take a lock is performed while the lock attempt is","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":4996,"byte_end":5073,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ performed and a thread may attempt to get a write lock but decides to be waked","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5074,"byte_end":5156,"line_start":127,"line_end":127,"column_start":1,"column_end":83}},{"value":"/ as the owner of a read lock if it is about to be placed in a wait queue.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5157,"byte_end":5233,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5234,"byte_end":5238,"line_start":129,"line_end":129,"column_start":1,"column_end":5}},{"value":"/ Statics and thread locals that need to register themselve for destruction at","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5239,"byte_end":5319,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ program or thread exit are implemented as members of an intrusive list. This","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5320,"byte_end":5400,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ implementation avoid heap memory allocation caused by system library support","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5401,"byte_end":5481,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ (`libc::at_exit`, `glibc::__cxa_at_thread_exit`, pthread... registers use heap","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5482,"byte_end":5564,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ memory allocation), and it avoid to fall on system library implementation","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5565,"byte_end":5642,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/ limits that may cause `thread_locals` declared with `std::thread_locals` not to","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5643,"byte_end":5726,"line_start":135,"line_end":135,"column_start":1,"column_end":84}},{"value":"/ be dropped. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5727,"byte_end":5743,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5744,"byte_end":5748,"line_start":137,"line_end":137,"column_start":1,"column_end":5}},{"value":"/ Last but not least of the optimization, on windows and unixes","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5749,"byte_end":5814,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ `#[dynamic]` statics initialization is forced before main start (NB `#[dynamic(lazy)]`). This fact unable","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5815,"byte_end":5924,"line_start":139,"line_end":139,"column_start":1,"column_end":110}},{"value":"/ a double check with a single boolean for all statics that is much faster other","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":5925,"byte_end":6007,"line_start":140,"line_end":140,"column_start":1,"column_end":83}},{"value":"/ double check solution. On other plateforms `#[dynamic]` attributed statics will behave as `#[dynamic(lazy)]`","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6008,"byte_end":6120,"line_start":141,"line_end":141,"column_start":1,"column_end":113}},{"value":"/ statics.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6121,"byte_end":6133,"line_start":142,"line_end":142,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6134,"byte_end":6138,"line_start":143,"line_end":143,"column_start":1,"column_end":5}},{"value":"/ ## Benchmark results","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6139,"byte_end":6163,"line_start":144,"line_end":144,"column_start":1,"column_end":25}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6164,"byte_end":6168,"line_start":145,"line_end":145,"column_start":1,"column_end":5}},{"value":"/ ### Lazy static access","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6169,"byte_end":6195,"line_start":146,"line_end":146,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6196,"byte_end":6200,"line_start":147,"line_end":147,"column_start":1,"column_end":5}},{"value":"/ Th graph bellow showes the access time to lazy statics once they are initialized. The measurment includes statics from crates `double_checked_cell` and `lazy_static`.  In the legend \"LesserLazy\" are the lazy declared using `#[dynamic]` attribute and \"Lazy\" those declared with the","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6201,"byte_end":6485,"line_start":148,"line_end":148,"column_start":1,"column_end":285}},{"value":"/ attribute `#[dynamic(lazy)]`. On the horizontal axis is reported the number of thread that almost simultaneous attempt to access the lazy and the vertical axis the access time summed over all thread. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6486,"byte_end":6690,"line_start":149,"line_end":149,"column_start":1,"column_end":205}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6691,"byte_end":6695,"line_start":150,"line_end":150,"column_start":1,"column_end":5}},{"value":"/ Access time to lazy from this crates can be up to *10x faster* than other solutions.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6696,"byte_end":6784,"line_start":151,"line_end":151,"column_start":1,"column_end":89}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6785,"byte_end":6789,"line_start":152,"line_end":152,"column_start":1,"column_end":5}},{"value":"/ ![](docs/access.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6790,"byte_end":6814,"line_start":153,"line_end":153,"column_start":1,"column_end":25}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6815,"byte_end":6819,"line_start":154,"line_end":154,"column_start":1,"column_end":5}},{"value":"/ ### Lazy static initialization","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6820,"byte_end":6854,"line_start":155,"line_end":155,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6855,"byte_end":6859,"line_start":156,"line_end":156,"column_start":1,"column_end":5}},{"value":"/ #### Extremely short initization performance","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6860,"byte_end":6908,"line_start":157,"line_end":157,"column_start":1,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6909,"byte_end":6913,"line_start":158,"line_end":158,"column_start":1,"column_end":5}},{"value":"/ This graph showes the access time to lazy statics when the lazy is not yet","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6914,"byte_end":6992,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ initialized. The measurment includes statics from crates `double_checked_cell`","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":6993,"byte_end":7075,"line_start":160,"line_end":160,"column_start":1,"column_end":83}},{"value":"/ and `lazy_static`.  In the legend \"LesserLazy\" are the lazy declared using","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7076,"byte_end":7154,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ `#[dynamic]` attribute and \"Lazy\" those declared with the attribute","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7155,"byte_end":7226,"line_start":162,"line_end":162,"column_start":1,"column_end":72}},{"value":"/ `#[dynamic(lazy)]`. On the horizontal axis is reported the number of thread","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7227,"byte_end":7306,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ that almost simultaneous attempt to access and initialize the lazy and the","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7307,"byte_end":7385,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"/ vertical axis the access time + initialization time overhead summed over all","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7386,"byte_end":7466,"line_start":165,"line_end":165,"column_start":1,"column_end":81}},{"value":"/ thread. The initialization in itself count for pico seconds. \"LesserLazy\" (`#[dynamic]) are","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7467,"byte_end":7562,"line_start":166,"line_end":166,"column_start":1,"column_end":96}},{"value":"/ not ploted here because they are initialized before main start but whatsoever,","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7563,"byte_end":7645,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ they use the exact same lock as that of \"Lazy\" (`#[dynamic(lazy)]`) statics.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7646,"byte_end":7726,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7727,"byte_end":7731,"line_start":169,"line_end":169,"column_start":1,"column_end":5}},{"value":"/ Initialization duration is *3x time faster* when using statics from this crates.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7732,"byte_end":7816,"line_start":170,"line_end":170,"column_start":1,"column_end":85}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7817,"byte_end":7821,"line_start":171,"line_end":171,"column_start":1,"column_end":5}},{"value":"/ ![](docs/init_nano.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7822,"byte_end":7849,"line_start":172,"line_end":172,"column_start":1,"column_end":28}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7850,"byte_end":7854,"line_start":173,"line_end":173,"column_start":1,"column_end":5}},{"value":"/ #### Large initization performance","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7855,"byte_end":7893,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7894,"byte_end":7898,"line_start":175,"line_end":175,"column_start":1,"column_end":5}},{"value":"/ In this case all thread attempt to initialize a static whose initialization takes","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7899,"byte_end":7984,"line_start":176,"line_end":176,"column_start":1,"column_end":86}},{"value":"/ approximately 20µs. Static from this crates scale much better on high contention. On high contention","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":7985,"byte_end":8090,"line_start":177,"line_end":177,"column_start":1,"column_end":105}},{"value":"/ this crates provides a *10x speed-up*.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8091,"byte_end":8133,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8134,"byte_end":8138,"line_start":179,"line_end":179,"column_start":1,"column_end":5}},{"value":"/ ![](docs/init_20us.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8139,"byte_end":8166,"line_start":180,"line_end":180,"column_start":1,"column_end":28}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8167,"byte_end":8171,"line_start":181,"line_end":181,"column_start":1,"column_end":5}},{"value":"/ ### Mutable Locked lazy access","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8172,"byte_end":8206,"line_start":182,"line_end":182,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8207,"byte_end":8211,"line_start":183,"line_end":183,"column_start":1,"column_end":5}},{"value":"/ Mutable lazy from this crates are compared to an implementation using parking-lot crate `RwLock`. The implementation","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8212,"byte_end":8332,"line_start":184,"line_end":184,"column_start":1,"column_end":121}},{"value":"/ can be found in the source file `benches/multi_threaded/main.rs`.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8333,"byte_end":8402,"line_start":185,"line_end":185,"column_start":1,"column_end":70}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8403,"byte_end":8407,"line_start":186,"line_end":186,"column_start":1,"column_end":5}},{"value":"/ On the graph bellow the legend \"Locked Lazy\" are for mutable statics declared with `#[dynamic(lazy)]` attribute, \"LesserLocked Lazy\" those declared with `#[dynamic]`, \"LesserLocked LazyDrop\" those declared with `#[dynamic(drop)]` and \"Locked Lazy PkLot\" the one implemented using parking-lot crate `RwLock`.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8408,"byte_end":8719,"line_start":187,"line_end":187,"column_start":1,"column_end":312}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8720,"byte_end":8724,"line_start":188,"line_end":188,"column_start":1,"column_end":5}},{"value":"/ Mutable locked statics from this crates are close to *2x time faster* than the solution using parking-lot RwLock if the initialization is attempted throught an attempt to get a read lock (on the first graph). When initilization is attempted through an attempt to get a write lock all solutions are globaly equivalent.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":8725,"byte_end":9046,"line_start":189,"line_end":189,"column_start":1,"column_end":322}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9047,"byte_end":9051,"line_start":190,"line_end":190,"column_start":1,"column_end":5}},{"value":"/ ![](docs/access_locked_read.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9052,"byte_end":9088,"line_start":191,"line_end":191,"column_start":1,"column_end":37}},{"value":"/ ![](docs/access_locked_write.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9089,"byte_end":9126,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9127,"byte_end":9131,"line_start":193,"line_end":193,"column_start":1,"column_end":5}},{"value":"/ ### Mutable locked lazy static initialization","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9132,"byte_end":9181,"line_start":194,"line_end":194,"column_start":1,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9182,"byte_end":9186,"line_start":195,"line_end":195,"column_start":1,"column_end":5}},{"value":"/ #### Extremely short initization performance","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9187,"byte_end":9235,"line_start":196,"line_end":196,"column_start":1,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9236,"byte_end":9240,"line_start":197,"line_end":197,"column_start":1,"column_end":5}},{"value":"/ Here we compare access time when the lazy is not yet initialized. On high","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9241,"byte_end":9318,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ contention, when a high number of thread attempt to get a read lock while the","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9319,"byte_end":9400,"line_start":199,"line_end":199,"column_start":1,"column_end":82}},{"value":"/ lazy is not yet initialized, lazy declared with #[dynamic(lazy)] perform close","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9401,"byte_end":9483,"line_start":200,"line_end":200,"column_start":1,"column_end":83}},{"value":"/ to *100x time* `RwLock`. This is the concequence of the adaptative lock. On the","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9484,"byte_end":9567,"line_start":201,"line_end":201,"column_start":1,"column_end":84}},{"value":"/ other hand, on low contention, when only 1 or 2 thread are simultaneously","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9568,"byte_end":9645,"line_start":202,"line_end":202,"column_start":1,"column_end":78}},{"value":"/ attempting to initialize the static, this adaptative ness cause an increased","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9646,"byte_end":9726,"line_start":203,"line_end":203,"column_start":1,"column_end":81}},{"value":"/ initialization time. Nevertheless this is a one shot performance shift of a few","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9727,"byte_end":9810,"line_start":204,"line_end":204,"column_start":1,"column_end":84}},{"value":"/ nano seconds.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9811,"byte_end":9828,"line_start":205,"line_end":205,"column_start":1,"column_end":18}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9829,"byte_end":9833,"line_start":206,"line_end":206,"column_start":1,"column_end":5}},{"value":"/ ![](docs/init_locked_nano.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9834,"byte_end":9868,"line_start":207,"line_end":207,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9869,"byte_end":9873,"line_start":208,"line_end":208,"column_start":1,"column_end":5}},{"value":"/ #### Large initialization time ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9874,"byte_end":9909,"line_start":209,"line_end":209,"column_start":1,"column_end":36}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9910,"byte_end":9914,"line_start":210,"line_end":210,"column_start":1,"column_end":5}},{"value":"/ Here we compare access time + initialization time when the lazy is not yet initialized and when the initialization time is","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":9915,"byte_end":10041,"line_start":211,"line_end":211,"column_start":1,"column_end":127}},{"value":"/ of the order of 20µs. When all threads attempt to initialize the statics while trying to get a write lock, the statics from ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10042,"byte_end":10171,"line_start":212,"line_end":212,"column_start":1,"column_end":129}},{"value":"/ this crate have similar performance as statics using parking_lot `RwLock`. But if such initialization is performed through attempt","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10172,"byte_end":10306,"line_start":213,"line_end":213,"column_start":1,"column_end":135}},{"value":"/ to get a read lock, statics from this crate are *200x time faster* than `RwLock`. This is also a concequence of the adaptative lock algorithm.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10307,"byte_end":10453,"line_start":214,"line_end":214,"column_start":1,"column_end":147}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10454,"byte_end":10458,"line_start":215,"line_end":215,"column_start":1,"column_end":5}},{"value":"/ ![](docs/init_locked_20us.svg)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10459,"byte_end":10493,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10494,"byte_end":10498,"line_start":217,"line_end":217,"column_start":1,"column_end":5}},{"value":"/ # Thread local support","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10499,"byte_end":10525,"line_start":218,"line_end":218,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10526,"byte_end":10530,"line_start":219,"line_end":219,"column_start":1,"column_end":5}},{"value":"/ On nightly `thread_local` support can be enabled with the feature","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10531,"byte_end":10600,"line_start":220,"line_end":220,"column_start":1,"column_end":70}},{"value":"/ `thread_local`. The attribute `dynamic` can be used with thread locals as with","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10601,"byte_end":10683,"line_start":221,"line_end":221,"column_start":1,"column_end":83}},{"value":"/ regular statics. In this case, the mutable `thread_local` will behave similarly","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10684,"byte_end":10767,"line_start":222,"line_end":222,"column_start":1,"column_end":84}},{"value":"/ to a RefCell that initialize its content on the first acces and with the same","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10768,"byte_end":10849,"line_start":223,"line_end":223,"column_start":1,"column_end":82}},{"value":"/ syntax as mutable lazy statics.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10850,"byte_end":10885,"line_start":224,"line_end":224,"column_start":1,"column_end":36}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10886,"byte_end":10890,"line_start":225,"line_end":225,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10891,"byte_end":10902,"line_start":226,"line_end":226,"column_start":1,"column_end":12}},{"value":"/ # #![cfg_attr(feature = \"thread_local\", feature(thread_local))]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10903,"byte_end":10970,"line_start":227,"line_end":227,"column_start":1,"column_end":68}},{"value":"/ # use static_init::{Finaly,dynamic};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":10971,"byte_end":11011,"line_start":228,"line_end":228,"column_start":1,"column_end":41}},{"value":"/ # #[cfg(feature = \"thread_local\")]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11012,"byte_end":11050,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/ # mod m{","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11051,"byte_end":11063,"line_start":230,"line_end":230,"column_start":1,"column_end":13}},{"value":"/ # use static_init::{dynamic};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11064,"byte_end":11097,"line_start":231,"line_end":231,"column_start":1,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11098,"byte_end":11102,"line_start":232,"line_end":232,"column_start":1,"column_end":5}},{"value":"/ #[dynamic(drop)] //guaranteed to be drop: no leak contrarily to std::thread_local","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11103,"byte_end":11188,"line_start":233,"line_end":233,"column_start":1,"column_end":86}},{"value":"/ #[thread_local]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11189,"byte_end":11208,"line_start":234,"line_end":234,"column_start":1,"column_end":20}},{"value":"/ static V: Vec<i32> = vec![1,1,2,3,5];","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11209,"byte_end":11250,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11251,"byte_end":11255,"line_start":236,"line_end":236,"column_start":1,"column_end":5}},{"value":"/ #[dynamic]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11256,"byte_end":11270,"line_start":237,"line_end":237,"column_start":1,"column_end":15}},{"value":"/ #[thread_local]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11271,"byte_end":11290,"line_start":238,"line_end":238,"column_start":1,"column_end":20}},{"value":"/ static mut W: Vec<i32> = V.clone();","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11291,"byte_end":11330,"line_start":239,"line_end":239,"column_start":1,"column_end":40}},{"value":"/ # fn main() { ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11331,"byte_end":11349,"line_start":240,"line_end":240,"column_start":1,"column_end":19}},{"value":"/ assert_ne!(W.read().len(), 0);","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11350,"byte_end":11384,"line_start":241,"line_end":241,"column_start":1,"column_end":35}},{"value":"/ assert_ne!(W.try_read().unwrap().len(), 0);","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11385,"byte_end":11432,"line_start":242,"line_end":242,"column_start":1,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11433,"byte_end":11440,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11441,"byte_end":11448,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11449,"byte_end":11456,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11457,"byte_end":11461,"line_start":246,"line_end":246,"column_start":1,"column_end":5}},{"value":"/ # Unsafe Low level ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11462,"byte_end":11485,"line_start":247,"line_end":247,"column_start":1,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11486,"byte_end":11490,"line_start":248,"line_end":248,"column_start":1,"column_end":5}},{"value":"/ ## Unchecked statics initiliazed at program start up","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11491,"byte_end":11547,"line_start":249,"line_end":249,"column_start":1,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11548,"byte_end":11552,"line_start":250,"line_end":250,"column_start":1,"column_end":5}},{"value":"/ The library also provides unchecked statics, whose initialization is run before main start. Those statics","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11553,"byte_end":11662,"line_start":251,"line_end":251,"column_start":1,"column_end":110}},{"value":"/ does not imply any memory overhead neither execution time overhead. This is the responsability of the coder","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11663,"byte_end":11774,"line_start":252,"line_end":252,"column_start":1,"column_end":112}},{"value":"/ to be sure not to access those static before they are initialized. To be sound, all those statics are turned","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11775,"byte_end":11887,"line_start":253,"line_end":253,"column_start":1,"column_end":113}},{"value":"/ by the macro into mutable static to be sure all access to them is unsafe.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11888,"byte_end":11965,"line_start":254,"line_end":254,"column_start":1,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11966,"byte_end":11970,"line_start":255,"line_end":255,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11971,"byte_end":11982,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ use static_init::dynamic;","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":11983,"byte_end":12012,"line_start":257,"line_end":257,"column_start":1,"column_end":30}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12013,"byte_end":12017,"line_start":258,"line_end":258,"column_start":1,"column_end":5}},{"value":"/ #[dynamic(10)]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12018,"byte_end":12036,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ static A: Vec<i32> = vec![1,2,3];","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12037,"byte_end":12074,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12075,"byte_end":12079,"line_start":261,"line_end":261,"column_start":1,"column_end":5}},{"value":"/ #[dynamic(0,drop)]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12080,"byte_end":12102,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"/ static mut B: Vec<i32> = unsafe {A.clone()};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12103,"byte_end":12151,"line_start":263,"line_end":263,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12152,"byte_end":12159,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/ The number indicates the priority, the larger the number, the sooner the static will be initialized.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12160,"byte_end":12264,"line_start":265,"line_end":265,"column_start":1,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12265,"byte_end":12269,"line_start":266,"line_end":266,"column_start":1,"column_end":5}},{"value":"/ Those statics can also be droped at program exit with the `drop` attribute argument.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12270,"byte_end":12358,"line_start":267,"line_end":267,"column_start":1,"column_end":89}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12359,"byte_end":12363,"line_start":268,"line_end":268,"column_start":1,"column_end":5}},{"value":"/ Those statics are only supported on unixes and windows but priority are not yet supported on Mac.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12364,"byte_end":12465,"line_start":269,"line_end":269,"column_start":1,"column_end":102}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12466,"byte_end":12470,"line_start":270,"line_end":270,"column_start":1,"column_end":5}},{"value":"/ ## Program constructor destructor ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12471,"byte_end":12509,"line_start":271,"line_end":271,"column_start":1,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12510,"byte_end":12514,"line_start":272,"line_end":272,"column_start":1,"column_end":5}},{"value":"/ It is possible to register fonction for execution before main start/ after main returns.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12515,"byte_end":12607,"line_start":273,"line_end":273,"column_start":1,"column_end":93}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12608,"byte_end":12612,"line_start":274,"line_end":274,"column_start":1,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12613,"byte_end":12624,"line_start":275,"line_end":275,"column_start":1,"column_end":12}},{"value":"/ use static_init::{constructor, destructor};","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12625,"byte_end":12672,"line_start":276,"line_end":276,"column_start":1,"column_end":48}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12673,"byte_end":12677,"line_start":277,"line_end":277,"column_start":1,"column_end":5}},{"value":"/ #[constructor(10)]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12678,"byte_end":12700,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/ extern \"C\" fn run_first() {}","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12701,"byte_end":12733,"line_start":279,"line_end":279,"column_start":1,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12734,"byte_end":12738,"line_start":280,"line_end":280,"column_start":1,"column_end":5}},{"value":"/ #[constructor(0)]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12739,"byte_end":12760,"line_start":281,"line_end":281,"column_start":1,"column_end":22}},{"value":"/ extern \"C\" fn then_run() {}","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12761,"byte_end":12792,"line_start":282,"line_end":282,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12793,"byte_end":12797,"line_start":283,"line_end":283,"column_start":1,"column_end":5}},{"value":"/ #[destructor(0)]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12798,"byte_end":12818,"line_start":284,"line_end":284,"column_start":1,"column_end":21}},{"value":"/ extern \"C\" fn pre_finish() {}","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12819,"byte_end":12852,"line_start":285,"line_end":285,"column_start":1,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12853,"byte_end":12857,"line_start":286,"line_end":286,"column_start":1,"column_end":5}},{"value":"/ #[destructor(10)]","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12858,"byte_end":12879,"line_start":287,"line_end":287,"column_start":1,"column_end":22}},{"value":"/ extern \"C\" fn finaly() {}","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12880,"byte_end":12909,"line_start":288,"line_end":288,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12910,"byte_end":12917,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12918,"byte_end":12922,"line_start":290,"line_end":290,"column_start":1,"column_end":5}},{"value":"/ # Debug support","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12923,"byte_end":12942,"line_start":291,"line_end":291,"column_start":1,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12943,"byte_end":12947,"line_start":292,"line_end":292,"column_start":1,"column_end":5}},{"value":"/ The feature `debug_order` can be activated to detect trouble with initialization order of raw","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":12948,"byte_end":13045,"line_start":293,"line_end":293,"column_start":1,"column_end":98}},{"value":"/ statics or dead locks due to circular lazy initialization.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":13046,"byte_end":13108,"line_start":294,"line_end":294,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":14512,"byte_end":14518,"line_start":338,"line_end":338,"column_start":113,"column_end":119}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":18779,"byte_end":18783,"line_start":425,"line_end":425,"column_start":10,"column_end":14},"name":"Data","qualname":"::Sequential::Data","value":"type Data;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":18794,"byte_end":18808,"line_start":426,"line_end":426,"column_start":10,"column_end":24},"name":"Sequentializer","qualname":"::Sequential::Sequentializer","value":"type Sequentializer;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":19088,"byte_end":19094,"line_start":433,"line_end":433,"column_start":11,"column_end":17},"name":"Phased","qualname":"::Phased","value":"Phased","parent":null,"children":[{"krate":0,"index":15}],"decl_id":null,"docs":" Trait for objects that know in which [phase](Phase) they are.\n","sig":null,"attributes":[{"value":"/ Trait for objects that know in which [phase](Phase) they are.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":19012,"byte_end":19077,"line_start":432,"line_end":432,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":19137,"byte_end":19142,"line_start":435,"line_end":435,"column_start":8,"column_end":13},"name":"phase","qualname":"::Phased::phase","value":"pub fn phase(&Self) -> Phase","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" return the current phase\n","sig":null,"attributes":[{"value":"/ return the current phase","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":19101,"byte_end":19129,"line_start":434,"line_end":434,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":20041,"byte_end":20050,"line_start":453,"line_end":453,"column_start":10,"column_end":19},"name":"ReadGuard","qualname":"::Sequentializer::ReadGuard","value":"type ReadGuard;","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":20061,"byte_end":20071,"line_start":454,"line_end":454,"column_start":10,"column_end":20},"name":"WriteGuard","qualname":"::Sequentializer::WriteGuard","value":"type WriteGuard;","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":27915,"byte_end":27933,"line_start":622,"line_end":622,"column_start":11,"column_end":29},"name":"GeneratorTolerance","qualname":"::GeneratorTolerance","value":"GeneratorTolerance","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":27946,"byte_end":27958,"line_start":623,"line_end":623,"column_start":11,"column_end":23},"name":"INIT_FAILURE","qualname":"::GeneratorTolerance::INIT_FAILURE","value":"bool","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":77},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":27976,"byte_end":28002,"line_start":624,"line_end":624,"column_start":11,"column_end":37},"name":"FINAL_REGISTRATION_FAILURE","qualname":"::GeneratorTolerance::FINAL_REGISTRATION_FAILURE","value":"bool","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":78},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28057,"byte_end":28066,"line_start":628,"line_end":628,"column_start":11,"column_end":20},"name":"Generator","qualname":"::Generator","value":"Generator<T>: GeneratorTolerance","parent":null,"children":[{"krate":0,"index":80}],"decl_id":null,"docs":" Generates a value of type `T`\n","sig":null,"attributes":[{"value":"/ Generates a value of type `T`","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28013,"byte_end":28046,"line_start":627,"line_end":627,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28099,"byte_end":28107,"line_start":629,"line_end":629,"column_start":8,"column_end":16},"name":"generate","qualname":"::Generator::generate","value":"pub fn generate(&Self) -> T","parent":{"krate":0,"index":78},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28831,"byte_end":28837,"line_start":658,"line_end":658,"column_start":11,"column_end":17},"name":"Finaly","qualname":"::Finaly","value":"Finaly","parent":null,"children":[{"krate":0,"index":100}],"decl_id":null,"docs":" Trait that must be implemented by #[dynamic(finalize)] statics. \n","sig":null,"attributes":[{"value":"/ Trait that must be implemented by #[dynamic(finalize)] statics. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28752,"byte_end":28820,"line_start":657,"line_end":657,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28942,"byte_end":28948,"line_start":661,"line_end":661,"column_start":8,"column_end":14},"name":"finaly","qualname":"::Finaly::finaly","value":"pub fn finaly(&Self)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" This method is called when program or thread exit and the lazy\n was initialized\n","sig":null,"attributes":[{"value":"/ This method is called when program or thread exit and the lazy","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28844,"byte_end":28910,"line_start":659,"line_end":659,"column_start":5,"column_end":71}},{"value":"/ was initialized","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28915,"byte_end":28934,"line_start":660,"line_end":660,"column_start":5,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29044,"byte_end":29050,"line_start":665,"line_end":665,"column_start":11,"column_end":17},"name":"Uninit","qualname":"::Uninit","value":"Uninit","parent":null,"children":[{"krate":0,"index":102}],"decl_id":null,"docs":" Trait that must be implemented by #[dynamic(prime)] mutable statics. \n","sig":null,"attributes":[{"value":"/ Trait that must be implemented by #[dynamic(prime)] mutable statics. ","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28960,"byte_end":29033,"line_start":664,"line_end":664,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29298,"byte_end":29304,"line_start":671,"line_end":671,"column_start":8,"column_end":14},"name":"uninit","qualname":"::Uninit::uninit","value":"pub fn uninit(&mut Self)","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" This method is called when program or thread exit and the lazy\n was initialized","sig":null,"attributes":[{"value":"/ This method is called when program or thread exit and the lazy","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29057,"byte_end":29123,"line_start":666,"line_end":666,"column_start":5,"column_end":71}},{"value":"/ was initialized","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29128,"byte_end":29147,"line_start":667,"line_end":667,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29152,"byte_end":29155,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ It should leave the target objet in a valid state as it could","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29160,"byte_end":29225,"line_start":669,"line_end":669,"column_start":5,"column_end":70}},{"value":"/ be accessed throud `primed_<read|write>` method familly.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29230,"byte_end":29290,"line_start":670,"line_end":670,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":103},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29511,"byte_end":29516,"line_start":682,"line_end":682,"column_start":9,"column_end":14},"name":"phase","qualname":"::phase","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":1756},{"krate":0,"index":1774},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1765},{"krate":0,"index":1763},{"krate":0,"index":1761},{"krate":0,"index":1758},{"krate":0,"index":1775},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":124}],"decl_id":null,"docs":" phases and bits to manipulate them;\n","sig":null,"attributes":[{"value":"/ phases and bits to manipulate them;","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":29463,"byte_end":29502,"line_start":681,"line_end":681,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1756},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":30964,"byte_end":30969,"line_start":707,"line_end":707,"column_start":20,"column_end":25},"name":"Phase","qualname":"::phase::Phase","value":"Phase {  }","parent":null,"children":[{"krate":0,"index":1757}],"decl_id":null,"docs":" The lifetime phase of an object, this indicate weither the object was initialized\n finalized (droped),...","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1797},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":30995,"byte_end":31006,"line_start":708,"line_end":708,"column_start":19,"column_end":30},"name":"INITIALIZED","qualname":"::phase::Phase::INITIALIZED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1798},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31084,"byte_end":31107,"line_start":709,"line_end":709,"column_start":19,"column_end":42},"name":"INITIALIZATION_PANICKED","qualname":"::phase::Phase::INITIALIZATION_PANICKED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1799},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31173,"byte_end":31194,"line_start":710,"line_end":710,"column_start":19,"column_end":40},"name":"INITIALIZATION_SKIPED","qualname":"::phase::Phase::INITIALIZATION_SKIPED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1800},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31264,"byte_end":31274,"line_start":713,"line_end":713,"column_start":19,"column_end":29},"name":"REGISTERED","qualname":"::phase::Phase::REGISTERED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1801},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31353,"byte_end":31374,"line_start":714,"line_end":714,"column_start":19,"column_end":40},"name":"REGISTRATION_PANICKED","qualname":"::phase::Phase::REGISTRATION_PANICKED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1802},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31442,"byte_end":31462,"line_start":715,"line_end":715,"column_start":19,"column_end":39},"name":"REGISTRATION_REFUSED","qualname":"::phase::Phase::REGISTRATION_REFUSED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1803},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31532,"byte_end":31541,"line_start":717,"line_end":717,"column_start":19,"column_end":28},"name":"FINALIZED","qualname":"::phase::Phase::FINALIZED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1804},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31621,"byte_end":31642,"line_start":718,"line_end":718,"column_start":19,"column_end":40},"name":"FINALIZATION_PANICKED","qualname":"::phase::Phase::FINALIZATION_PANICKED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1805},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31711,"byte_end":31737,"line_start":720,"line_end":720,"column_start":19,"column_end":45},"name":"INITIALIZED_AND_REGISTERED","qualname":"::phase::Phase::INITIALIZED_AND_REGISTERED","value":"Phase","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":690},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker.rs","byte_start":52496,"byte_end":52505,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"ReadGuard","qualname":"::phase_locker::PhaseLocker::ReadGuard","value":"type ReadGuard: Phased;","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":691},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker.rs","byte_start":52524,"byte_end":52534,"line_start":62,"line_end":62,"column_start":10,"column_end":20},"name":"WriteGuard","qualname":"::phase_locker::PhaseLocker::WriteGuard","value":"type WriteGuard: Phased + PhaseGuard<'a, T>;","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":170953,"byte_end":170959,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"name":"Target","qualname":"::generic_lazy::LazyData::Target","value":"type Target;","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1903},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":172268,"byte_end":172279,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::generic_lazy::AccessError","value":"AccessError { phase }","parent":null,"children":[{"krate":0,"index":1904}],"decl_id":null,"docs":" Lazy access error\n","sig":null,"attributes":[{"value":"/ Lazy access error","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":172184,"byte_end":172205,"line_start":156,"line_end":156,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1904},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":172290,"byte_end":172295,"line_start":159,"line_end":159,"column_start":9,"column_end":14},"name":"phase","qualname":"::generic_lazy::AccessError::phase","value":"phase::Phase","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1503},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lazy","qualname":"::lazy","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1600},{"krate":0,"index":1606},{"krate":0,"index":1611},{"krate":0,"index":1618},{"krate":0,"index":1623},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1927},{"krate":0,"index":1931},{"krate":0,"index":1935},{"krate":0,"index":1940},{"krate":0,"index":1949},{"krate":0,"index":1954},{"krate":0,"index":1958},{"krate":0,"index":1967},{"krate":0,"index":1971},{"krate":0,"index":1975},{"krate":0,"index":1980},{"krate":0,"index":1987},{"krate":0,"index":1992},{"krate":0,"index":2000},{"krate":0,"index":2004},{"krate":0,"index":2008},{"krate":0,"index":2013},{"krate":0,"index":2020},{"krate":0,"index":2025},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2046},{"krate":0,"index":2053},{"krate":0,"index":2058},{"krate":0,"index":2066},{"krate":0,"index":2070},{"krate":0,"index":2074},{"krate":0,"index":2079},{"krate":0,"index":2088},{"krate":0,"index":2093},{"krate":0,"index":2097},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":2106},{"krate":0,"index":2110},{"krate":0,"index":2113},{"krate":0,"index":2117},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":1673},{"krate":0,"index":1683}],"decl_id":null,"docs":" Provides various implementation of lazily initialized types\n","sig":null,"attributes":[{"value":"/ Provides various implementation of lazily initialized types","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49714,"byte_end":49777,"line_start":1264,"line_end":1264,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":1642},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214330,"byte_end":214340,"line_start":143,"line_end":143,"column_start":11,"column_end":21},"name":"LazyAccess","qualname":"::lazy::LazyAccess","value":"LazyAccess: Sized","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"decl_id":null,"docs":" Helper trait to ease access static lazy associated functions\n","sig":null,"attributes":[{"value":"/ Helper trait to ease access static lazy associated functions","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214255,"byte_end":214319,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":1643},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214359,"byte_end":214365,"line_start":144,"line_end":144,"column_start":10,"column_end":16},"name":"Target","qualname":"::lazy::LazyAccess::Target","value":"type Target;","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214652,"byte_end":214655,"line_start":152,"line_end":152,"column_start":8,"column_end":11},"name":"get","qualname":"::lazy::LazyAccess::get","value":"pub fn get(Self) -> Self::Target","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Initialize if necessary then return a reference to the target.","sig":null,"attributes":[{"value":"/ Initialize if necessary then return a reference to the target.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214371,"byte_end":214437,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214442,"byte_end":214445,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214450,"byte_end":214462,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214467,"byte_end":214470,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Panic if previous attempt to initialize has panicked and the lazy policy does not","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214475,"byte_end":214560,"line_start":149,"line_end":149,"column_start":5,"column_end":90}},{"value":"/ tolorate further initialization attempt or if initialization","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214565,"byte_end":214629,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/ panic.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214634,"byte_end":214644,"line_start":151,"line_end":151,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214775,"byte_end":214782,"line_start":154,"line_end":154,"column_start":8,"column_end":15},"name":"try_get","qualname":"::lazy::LazyAccess::try_get","value":"pub fn try_get(Self) -> Result<Self::Target, AccessError>","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Return a reference to the target if initialized otherwise return an error.\n","sig":null,"attributes":[{"value":"/ Return a reference to the target if initialized otherwise return an error.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214689,"byte_end":214767,"line_start":153,"line_end":153,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214880,"byte_end":214885,"line_start":156,"line_end":156,"column_start":8,"column_end":13},"name":"phase","qualname":"::lazy::LazyAccess::phase","value":"pub fn phase(Self) -> Phase","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" The current phase of the static\n","sig":null,"attributes":[{"value":"/ The current phase of the static","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214837,"byte_end":214872,"line_start":155,"line_end":155,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214997,"byte_end":215001,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"init","qualname":"::lazy::LazyAccess::init","value":"pub fn init(Self) -> Phase","parent":{"krate":0,"index":1642},"children":[],"decl_id":null,"docs":" Initialize the static if there were no previous attempt to initialize it.\n","sig":null,"attributes":[{"value":"/ Initialize the static if there were no previous attempt to initialize it.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214912,"byte_end":214989,"line_start":157,"line_end":157,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":231824,"byte_end":231828,"line_start":588,"line_end":588,"column_start":13,"column_end":17},"name":"Lazy","qualname":"::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":1930}],"decl_id":null,"docs":"A type that initialize itself only once on the first access\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1967},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":231984,"byte_end":231994,"line_start":591,"line_end":591,"column_start":20,"column_end":30},"name":"LesserLazy","qualname":"::lazy::LesserLazy","value":"LesserLazy {  }","parent":null,"children":[{"krate":0,"index":1970}],"decl_id":null,"docs":"The actual type of statics attributed with [#[dynamic]](macro@crate::dynamic). The method [from_generator](Self::from_generator) is unsafe because this kind of static can only safely be used through this attribute macros.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2000},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":232319,"byte_end":232331,"line_start":598,"line_end":598,"column_start":20,"column_end":32},"name":"LazyFinalize","qualname":"::lazy::LazyFinalize","value":"LazyFinalize {  }","parent":null,"children":[{"krate":0,"index":2003}],"decl_id":null,"docs":"The actual type of statics attributed with [#[dynamic(lazy,finalize)]](macro@crate::dynamic) The method [from_generator](Self::from_generator) is unsafe as the object must be a non mutable static.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2033},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":232658,"byte_end":232676,"line_start":604,"line_end":604,"column_start":20,"column_end":38},"name":"LesserLazyFinalize","qualname":"::lazy::LesserLazyFinalize","value":"LesserLazyFinalize {  }","parent":null,"children":[{"krate":0,"index":2036}],"decl_id":null,"docs":"The actual type of statics attributed with [#[dynamic(finalize)]](macro@crate::dynamic). The method [from_generator](Self::from_generator) is unsafe because this kind of static can only safely be used through this attribute macros.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2066},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":233039,"byte_end":233049,"line_start":611,"line_end":611,"column_start":13,"column_end":23},"name":"UnSyncLazy","qualname":"::lazy::UnSyncLazy","value":"UnSyncLazy {  }","parent":null,"children":[{"krate":0,"index":2069}],"decl_id":null,"docs":"A version of [Lazy] whose reference can not be passed to other thread\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2128},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":278362,"byte_end":278373,"line_start":1613,"line_end":1613,"column_start":17,"column_end":28},"name":"locked_lazy","qualname":"::lazy::locked_lazy","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2133},{"krate":0,"index":2182},{"krate":0,"index":2187},{"krate":0,"index":2191},{"krate":0,"index":2196},{"krate":0,"index":2137},{"krate":0,"index":2141},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2157},{"krate":0,"index":2161},{"krate":0,"index":2166},{"krate":0,"index":2170},{"krate":0,"index":2174},{"krate":0,"index":2178},{"krate":0,"index":2200},{"krate":0,"index":2214},{"krate":0,"index":2228},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2219},{"krate":0,"index":2224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":278394,"byte_end":278404,"line_start":1613,"line_end":1613,"column_start":49,"column_end":59},"name":"LockedLazy","qualname":"::lazy::locked_lazy::LockedLazy","value":"LockedLazy {  }","parent":null,"children":[{"krate":0,"index":2136}],"decl_id":null,"docs":"A mutable locked lazy that initialize its content on the first lock\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2239},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":278609,"byte_end":278627,"line_start":1616,"line_end":1616,"column_start":24,"column_end":42},"name":"lesser_locked_lazy","qualname":"::lazy::lesser_locked_lazy","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2244},{"krate":0,"index":2293},{"krate":0,"index":2298},{"krate":0,"index":2302},{"krate":0,"index":2307},{"krate":0,"index":2248},{"krate":0,"index":2252},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2268},{"krate":0,"index":2272},{"krate":0,"index":2277},{"krate":0,"index":2281},{"krate":0,"index":2285},{"krate":0,"index":2289},{"krate":0,"index":2311},{"krate":0,"index":2314},{"krate":0,"index":2330}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2244},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":278629,"byte_end":278645,"line_start":1616,"line_end":1616,"column_start":44,"column_end":60},"name":"LesserLockedLazy","qualname":"::lazy::lesser_locked_lazy::LesserLockedLazy","value":"LesserLockedLazy {  }","parent":null,"children":[{"krate":0,"index":2247}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic]](macro@crate::dynamic) The method [from_generator](Self::from_generator) is unsafe because this kind of static can only safely be used through this attribute macros.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2335},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279025,"byte_end":279043,"line_start":1623,"line_end":1623,"column_start":31,"column_end":49},"name":"primed_locked_lazy","qualname":"::lazy::primed_locked_lazy","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2340},{"krate":0,"index":2389},{"krate":0,"index":2394},{"krate":0,"index":2398},{"krate":0,"index":2403},{"krate":0,"index":2344},{"krate":0,"index":2348},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":2359},{"krate":0,"index":2364},{"krate":0,"index":2368},{"krate":0,"index":2373},{"krate":0,"index":2377},{"krate":0,"index":2381},{"krate":0,"index":2385},{"krate":0,"index":2407},{"krate":0,"index":2421},{"krate":0,"index":2426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2340},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279045,"byte_end":279061,"line_start":1623,"line_end":1623,"column_start":51,"column_end":67},"name":"PrimedLockedLazy","qualname":"::lazy::primed_locked_lazy::PrimedLockedLazy","value":"PrimedLockedLazy {  }","parent":null,"children":[{"krate":0,"index":2343}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic(primed)]](macro@crate::dynamic)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2433},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279304,"byte_end":279329,"line_start":1626,"line_end":1626,"column_start":38,"column_end":63},"name":"primed_lesser_locked_lazy","qualname":"::lazy::primed_lesser_locked_lazy","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2438},{"krate":0,"index":2487},{"krate":0,"index":2492},{"krate":0,"index":2496},{"krate":0,"index":2501},{"krate":0,"index":2442},{"krate":0,"index":2446},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2462},{"krate":0,"index":2466},{"krate":0,"index":2471},{"krate":0,"index":2475},{"krate":0,"index":2479},{"krate":0,"index":2483},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2524},{"krate":0,"index":2529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2438},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279331,"byte_end":279353,"line_start":1626,"line_end":1626,"column_start":65,"column_end":87},"name":"PrimedLesserLockedLazy","qualname":"::lazy::primed_lesser_locked_lazy::PrimedLesserLockedLazy","value":"PrimedLesserLockedLazy {  }","parent":null,"children":[{"krate":0,"index":2441}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic(primed)]](macro@crate::dynamic)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2536},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279583,"byte_end":279603,"line_start":1630,"line_end":1630,"column_start":24,"column_end":44},"name":"locked_lazy_finalize","qualname":"::lazy::locked_lazy_finalize","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2541},{"krate":0,"index":2590},{"krate":0,"index":2595},{"krate":0,"index":2599},{"krate":0,"index":2604},{"krate":0,"index":2545},{"krate":0,"index":2549},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2560},{"krate":0,"index":2565},{"krate":0,"index":2569},{"krate":0,"index":2574},{"krate":0,"index":2578},{"krate":0,"index":2582},{"krate":0,"index":2586},{"krate":0,"index":2608},{"krate":0,"index":2622}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2541},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279604,"byte_end":279622,"line_start":1630,"line_end":1630,"column_start":45,"column_end":63},"name":"LockedLazyFinalize","qualname":"::lazy::locked_lazy_finalize::LockedLazyFinalize","value":"LockedLazyFinalize {  }","parent":null,"children":[{"krate":0,"index":2544}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic(lazy,finalize)]](macro@crate::dynamic)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2627},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279890,"byte_end":279917,"line_start":1634,"line_end":1634,"column_start":24,"column_end":51},"name":"lesser_locked_lazy_finalize","qualname":"::lazy::lesser_locked_lazy_finalize","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2632},{"krate":0,"index":2681},{"krate":0,"index":2686},{"krate":0,"index":2690},{"krate":0,"index":2695},{"krate":0,"index":2636},{"krate":0,"index":2640},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2656},{"krate":0,"index":2660},{"krate":0,"index":2665},{"krate":0,"index":2669},{"krate":0,"index":2673},{"krate":0,"index":2677},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2718}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2632},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":279918,"byte_end":279942,"line_start":1634,"line_end":1634,"column_start":52,"column_end":76},"name":"LesserLockedLazyFinalize","qualname":"::lazy::lesser_locked_lazy_finalize::LesserLockedLazyFinalize","value":"LesserLockedLazyFinalize {  }","parent":null,"children":[{"krate":0,"index":2635}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic(finalize)]](macro@crate::dynamic) The method [from_generator](Self::from_generator) is unsafe because this kind of static can only safely be used through this attribute macros.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2723},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":280359,"byte_end":280377,"line_start":1640,"line_end":1640,"column_start":24,"column_end":42},"name":"locked_lazy_droped","qualname":"::lazy::locked_lazy_droped","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2728},{"krate":0,"index":2777},{"krate":0,"index":2782},{"krate":0,"index":2786},{"krate":0,"index":2791},{"krate":0,"index":2732},{"krate":0,"index":2736},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2747},{"krate":0,"index":2752},{"krate":0,"index":2756},{"krate":0,"index":2761},{"krate":0,"index":2765},{"krate":0,"index":2769},{"krate":0,"index":2773},{"krate":0,"index":2795},{"krate":0,"index":2809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":280378,"byte_end":280394,"line_start":1640,"line_end":1640,"column_start":43,"column_end":59},"name":"LockedLazyDroped","qualname":"::lazy::locked_lazy_droped::LockedLazyDroped","value":"LockedLazyDroped {  }","parent":null,"children":[{"krate":0,"index":2731}],"decl_id":null,"docs":"The actual type of statics attributed with [#[dynamic(lazy,finalize)]](macro@crate::dynamic)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2814},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":280651,"byte_end":280676,"line_start":1644,"line_end":1644,"column_start":24,"column_end":49},"name":"lesser_locked_lazy_droped","qualname":"::lazy::lesser_locked_lazy_droped","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2819},{"krate":0,"index":2868},{"krate":0,"index":2873},{"krate":0,"index":2877},{"krate":0,"index":2882},{"krate":0,"index":2823},{"krate":0,"index":2827},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2843},{"krate":0,"index":2847},{"krate":0,"index":2852},{"krate":0,"index":2856},{"krate":0,"index":2860},{"krate":0,"index":2864},{"krate":0,"index":2886},{"krate":0,"index":2889},{"krate":0,"index":2905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2819},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":280677,"byte_end":280699,"line_start":1644,"line_end":1644,"column_start":50,"column_end":72},"name":"LesserLockedLazyDroped","qualname":"::lazy::lesser_locked_lazy_droped::LesserLockedLazyDroped","value":"LesserLockedLazyDroped {  }","parent":null,"children":[{"krate":0,"index":2822}],"decl_id":null,"docs":"The actual type of mutable statics attributed with #[dynamic(drop)] The method (new)[Self::from_generator] is unsafe because this kind of static can only safely be used through this attribute macros.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2910},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":281082,"byte_end":281107,"line_start":1651,"line_end":1651,"column_start":31,"column_end":56},"name":"primed_locked_lazy_droped","qualname":"::lazy::primed_locked_lazy_droped","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2915},{"krate":0,"index":2964},{"krate":0,"index":2969},{"krate":0,"index":2973},{"krate":0,"index":2978},{"krate":0,"index":2919},{"krate":0,"index":2923},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2939},{"krate":0,"index":2943},{"krate":0,"index":2948},{"krate":0,"index":2952},{"krate":0,"index":2956},{"krate":0,"index":2960},{"krate":0,"index":2982},{"krate":0,"index":2996},{"krate":0,"index":3001}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2915},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":281108,"byte_end":281130,"line_start":1651,"line_end":1651,"column_start":57,"column_end":79},"name":"PrimedLockedLazyDroped","qualname":"::lazy::primed_locked_lazy_droped::PrimedLockedLazyDroped","value":"PrimedLockedLazyDroped {  }","parent":null,"children":[{"krate":0,"index":2918}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic(primed,drop)]](macro@crate::dynamic)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3008},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":281409,"byte_end":281441,"line_start":1655,"line_end":1655,"column_start":38,"column_end":70},"name":"global_primed_locked_lazy_droped","qualname":"::lazy::global_primed_locked_lazy_droped","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3062},{"krate":0,"index":3067},{"krate":0,"index":3071},{"krate":0,"index":3076},{"krate":0,"index":3017},{"krate":0,"index":3021},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3037},{"krate":0,"index":3041},{"krate":0,"index":3046},{"krate":0,"index":3050},{"krate":0,"index":3054},{"krate":0,"index":3058},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3099},{"krate":0,"index":3104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3013},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":281442,"byte_end":281470,"line_start":1655,"line_end":1655,"column_start":71,"column_end":99},"name":"PrimedLesserLockedLazyDroped","qualname":"::lazy::global_primed_locked_lazy_droped::PrimedLesserLockedLazyDroped","value":"PrimedLesserLockedLazyDroped {  }","parent":null,"children":[{"krate":0,"index":3016}],"decl_id":null,"docs":"The actual type of mutable statics attributed with [#[dynamic(primed,drop)]](macro@crate::dynamic)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3111},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":282046,"byte_end":282064,"line_start":1663,"line_end":1663,"column_start":17,"column_end":35},"name":"unsync_locked_lazy","qualname":"::lazy::unsync_locked_lazy","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3116},{"krate":0,"index":3165},{"krate":0,"index":3170},{"krate":0,"index":3174},{"krate":0,"index":3179},{"krate":0,"index":3120},{"krate":0,"index":3124},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3140},{"krate":0,"index":3144},{"krate":0,"index":3149},{"krate":0,"index":3153},{"krate":0,"index":3157},{"krate":0,"index":3161},{"krate":0,"index":3183},{"krate":0,"index":3197},{"krate":0,"index":3211},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3202},{"krate":0,"index":3207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3116},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":282091,"byte_end":282107,"line_start":1663,"line_end":1663,"column_start":62,"column_end":78},"name":"UnSyncLockedLazy","qualname":"::lazy::unsync_locked_lazy::UnSyncLockedLazy","value":"UnSyncLockedLazy {  }","parent":null,"children":[{"krate":0,"index":3119}],"decl_id":null,"docs":"A RefCell that initializes its content on the first access\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1702},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw_static","qualname":"::raw_static","value":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1713}],"decl_id":null,"docs":" Provides types for statics that are meant to run code before main start or after it exit.\n","sig":null,"attributes":[{"value":"cfg(any(elf, mach_o, coff))","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49915,"byte_end":49945,"line_start":1271,"line_end":1271,"column_start":1,"column_end":31}},{"value":"/ Provides types for statics that are meant to run code before main start or after it exit.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49946,"byte_end":50039,"line_start":1272,"line_end":1272,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301082,"byte_end":301088,"line_start":220,"line_end":220,"column_start":16,"column_end":22},"name":"Static","qualname":"::raw_static::static_impl::Static","value":"","parent":null,"children":[],"decl_id":null,"docs":" The actual type of mutable *dynamic statics*.","sig":null,"attributes":[{"value":"/ The actual type of mutable *dynamic statics*.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":300826,"byte_end":300875,"line_start":214,"line_end":214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":300880,"byte_end":300883,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ It implements `Deref<Target=T>` and `DerefMut`.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":300888,"byte_end":300939,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":300944,"byte_end":300947,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ All associated functions are only usefull for the implementation of","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":300952,"byte_end":301023,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ the `dynamic` proc macro attribute","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301028,"byte_end":301066,"line_start":219,"line_end":219,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1728},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301359,"byte_end":301370,"line_start":228,"line_end":228,"column_start":16,"column_end":27},"name":"ConstStatic","qualname":"::raw_static::static_impl::ConstStatic","value":"","parent":null,"children":[],"decl_id":null,"docs":" The actual type of non mutable *dynamic statics*.","sig":null,"attributes":[{"value":"/ The actual type of non mutable *dynamic statics*.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301114,"byte_end":301167,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301172,"byte_end":301175,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ It implements `Deref<Target=T>`.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301180,"byte_end":301216,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301221,"byte_end":301224,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ All associated functions are only usefull for the implementation of","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301229,"byte_end":301300,"line_start":226,"line_end":226,"column_start":5,"column_end":76}},{"value":"/ the `dynamic` proc macro attribute","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301305,"byte_end":301343,"line_start":227,"line_end":227,"column_start":5,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1732},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301439,"byte_end":301454,"line_start":232,"line_end":232,"column_start":12,"column_end":27},"name":"__set_init_prio","qualname":"::raw_static::static_impl::__set_init_prio","value":"pub fn __set_init_prio(i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301410,"byte_end":301427,"line_start":231,"line_end":231,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301711,"byte_end":301717,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"name":"uninit","qualname":"<Static<T>>::uninit","value":"pub const unsafe fn uninit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build a new static.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301541,"byte_end":301550,"line_start":236,"line_end":236,"column_start":9,"column_end":18}},{"value":"/ Build a new static.","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301559,"byte_end":301582,"line_start":237,"line_end":237,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301591,"byte_end":301594,"line_start":238,"line_end":238,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301603,"byte_end":301615,"line_start":239,"line_end":239,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301624,"byte_end":301627,"line_start":240,"line_end":240,"column_start":9,"column_end":12}},{"value":"/ The target object must be a mutable static","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301636,"byte_end":301682,"line_start":241,"line_end":241,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301819,"byte_end":301823,"line_start":246,"line_end":246,"column_start":22,"column_end":26},"name":"from","qualname":"<Static<T>>::from","value":"pub const fn from(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301788,"byte_end":301797,"line_start":245,"line_end":245,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301922,"byte_end":301928,"line_start":251,"line_end":251,"column_start":16,"column_end":22},"name":"set_to","qualname":"<Static<T>>::set_to","value":"pub fn set_to(&'static mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301897,"byte_end":301906,"line_start":250,"line_end":250,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302197,"byte_end":302201,"line_start":261,"line_end":261,"column_start":23,"column_end":27},"name":"drop","qualname":"<Static<T>>::drop","value":"pub unsafe fn drop(&'static mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop the inner object","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302023,"byte_end":302032,"line_start":255,"line_end":255,"column_start":9,"column_end":18}},{"value":"/ Drop the inner object","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302041,"byte_end":302066,"line_start":256,"line_end":256,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302075,"byte_end":302078,"line_start":257,"line_end":257,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302087,"byte_end":302099,"line_start":258,"line_end":258,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302108,"byte_end":302111,"line_start":259,"line_end":259,"column_start":9,"column_end":12}},{"value":"/ The object should have been previously initialized","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302120,"byte_end":302174,"line_start":260,"line_end":260,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303367,"byte_end":303373,"line_start":295,"line_end":295,"column_start":29,"column_end":35},"name":"uninit","qualname":"<ConstStatic<T>>::uninit","value":"pub const unsafe fn uninit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build a new ConstStatic","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303193,"byte_end":303202,"line_start":289,"line_end":289,"column_start":9,"column_end":18}},{"value":"/ Build a new ConstStatic","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303211,"byte_end":303238,"line_start":290,"line_end":290,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303247,"byte_end":303250,"line_start":291,"line_end":291,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303259,"byte_end":303271,"line_start":292,"line_end":292,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303280,"byte_end":303283,"line_start":293,"line_end":293,"column_start":9,"column_end":12}},{"value":"/ The target object must be a mutable static","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303292,"byte_end":303338,"line_start":294,"line_end":294,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303470,"byte_end":303474,"line_start":299,"line_end":299,"column_start":22,"column_end":26},"name":"from","qualname":"<ConstStatic<T>>::from","value":"pub const fn from(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303439,"byte_end":303448,"line_start":298,"line_end":298,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303568,"byte_end":303574,"line_start":303,"line_end":303,"column_start":16,"column_end":22},"name":"set_to","qualname":"<ConstStatic<T>>::set_to","value":"pub fn set_to(&'static mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303543,"byte_end":303552,"line_start":302,"line_end":302,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303797,"byte_end":303801,"line_start":310,"line_end":310,"column_start":23,"column_end":27},"name":"drop","qualname":"<ConstStatic<T>>::drop","value":"pub unsafe fn drop(&'static mut Self)","parent":null,"children":[],"decl_id":null,"docs":" # Safety","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303669,"byte_end":303678,"line_start":306,"line_end":306,"column_start":9,"column_end":18}},{"value":"/ # Safety","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303687,"byte_end":303699,"line_start":307,"line_end":307,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303708,"byte_end":303711,"line_start":308,"line_end":308,"column_start":9,"column_end":12}},{"value":"/ The object should have been previously initialized","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303720,"byte_end":303774,"line_start":309,"line_end":309,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3225},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50117,"byte_end":50122,"line_start":1278,"line_end":1278,"column_start":5,"column_end":10},"name":"Const","qualname":"::InitMode::Const","value":"InitMode::Const","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50128,"byte_end":50132,"line_start":1279,"line_end":1279,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::InitMode::Lazy","value":"InitMode::Lazy","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3229},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50138,"byte_end":50148,"line_start":1280,"line_end":1280,"column_start":5,"column_end":15},"name":"LesserLazy","qualname":"::InitMode::LesserLazy","value":"InitMode::LesserLazy","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3231},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50154,"byte_end":50172,"line_start":1281,"line_end":1281,"column_start":5,"column_end":23},"name":"ProgramConstructor","qualname":"::InitMode::ProgramConstructor","value":"InitMode::ProgramConstructor(u16)","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3224},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50102,"byte_end":50110,"line_start":1277,"line_end":1277,"column_start":10,"column_end":18},"name":"InitMode","qualname":"::InitMode","value":"pub enum InitMode { Const, Lazy, LesserLazy, ProgramConstructor(u16), }","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229},{"krate":0,"index":3231}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3237},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50240,"byte_end":50244,"line_start":1287,"line_end":1287,"column_start":5,"column_end":9},"name":"None","qualname":"::FinalyMode::None","value":"FinalyMode::None","parent":{"krate":0,"index":3236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50250,"byte_end":50254,"line_start":1288,"line_end":1288,"column_start":5,"column_end":9},"name":"Drop","qualname":"::FinalyMode::Drop","value":"FinalyMode::Drop","parent":{"krate":0,"index":3236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3241},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50260,"byte_end":50268,"line_start":1289,"line_end":1289,"column_start":5,"column_end":13},"name":"Finalize","qualname":"::FinalyMode::Finalize","value":"FinalyMode::Finalize","parent":{"krate":0,"index":3236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3243},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50274,"byte_end":50291,"line_start":1290,"line_end":1290,"column_start":5,"column_end":22},"name":"ProgramDestructor","qualname":"::FinalyMode::ProgramDestructor","value":"FinalyMode::ProgramDestructor(u16)","parent":{"krate":0,"index":3236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3236},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50223,"byte_end":50233,"line_start":1286,"line_end":1286,"column_start":10,"column_end":20},"name":"FinalyMode","qualname":"::FinalyMode","value":"pub enum FinalyMode { None, Drop, Finalize, ProgramDestructor(u16), }","parent":null,"children":[{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3243}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3248},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50344,"byte_end":50354,"line_start":1295,"line_end":1295,"column_start":12,"column_end":22},"name":"StaticInfo","qualname":"::StaticInfo","value":"StaticInfo { variable_name, file_name, line, column, init_mode, drop_mode }","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3249},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50365,"byte_end":50378,"line_start":1296,"line_end":1296,"column_start":9,"column_end":22},"name":"variable_name","qualname":"::StaticInfo::variable_name","value":"&'static str","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3250},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50402,"byte_end":50411,"line_start":1297,"line_end":1297,"column_start":9,"column_end":18},"name":"file_name","qualname":"::StaticInfo::file_name","value":"&'static str","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3251},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50439,"byte_end":50443,"line_start":1298,"line_end":1298,"column_start":9,"column_end":13},"name":"line","qualname":"::StaticInfo::line","value":"u32","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3252},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50467,"byte_end":50473,"line_start":1299,"line_end":1299,"column_start":9,"column_end":15},"name":"column","qualname":"::StaticInfo::column","value":"u32","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3253},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50495,"byte_end":50504,"line_start":1300,"line_end":1300,"column_start":9,"column_end":18},"name":"init_mode","qualname":"::StaticInfo::init_mode","value":"InitMode","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3254},"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50528,"byte_end":50537,"line_start":1301,"line_end":1301,"column_start":9,"column_end":18},"name":"drop_mode","qualname":"::StaticInfo::drop_mode","value":"FinalyMode","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28163,"byte_end":28164,"line_start":632,"line_end":632,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28266,"byte_end":28267,"line_start":638,"line_end":638,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28405,"byte_end":28409,"line_start":643,"line_end":643,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28641,"byte_end":28645,"line_start":652,"line_end":652,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31830,"byte_end":31835,"line_start":724,"line_end":724,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","byte_start":54856,"byte_end":54861,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","byte_start":58323,"byte_end":58328,"line_start":124,"line_end":124,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","byte_start":58469,"byte_end":58474,"line_start":130,"line_end":130,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/spin_wait.rs","byte_start":63417,"byte_end":63425,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69153,"byte_end":69167,"line_start":117,"line_end":117,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69292,"byte_end":69306,"line_start":125,"line_end":125,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69642,"byte_end":69656,"line_start":136,"line_end":136,"column_start":66,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69849,"byte_end":69863,"line_start":142,"line_end":142,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":70569,"byte_end":70583,"line_start":172,"line_end":172,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":70755,"byte_end":70773,"line_start":182,"line_end":182,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":70898,"byte_end":70916,"line_start":190,"line_end":190,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71268,"byte_end":71286,"line_start":201,"line_end":201,"column_start":70,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71478,"byte_end":71496,"line_start":207,"line_end":207,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71682,"byte_end":71700,"line_start":214,"line_end":214,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71826,"byte_end":71844,"line_start":221,"line_end":221,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72008,"byte_end":72013,"line_start":230,"line_end":230,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72051,"byte_end":72056,"line_start":232,"line_end":232,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72072,"byte_end":72077,"line_start":234,"line_end":234,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72679,"byte_end":72689,"line_start":256,"line_end":256,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72818,"byte_end":72828,"line_start":263,"line_end":263,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":73560,"byte_end":73564,"line_start":285,"line_end":285,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":74156,"byte_end":74160,"line_start":307,"line_end":307,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":77626,"byte_end":77630,"line_start":403,"line_end":403,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":78774,"byte_end":78782,"line_start":434,"line_end":434,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":78963,"byte_end":78971,"line_start":444,"line_end":444,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":79987,"byte_end":79995,"line_start":479,"line_end":479,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":80601,"byte_end":80609,"line_start":493,"line_end":493,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":83977,"byte_end":83985,"line_start":610,"line_end":610,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":84141,"byte_end":84156,"line_start":619,"line_end":619,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":84710,"byte_end":84725,"line_start":639,"line_end":639,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":85670,"byte_end":85685,"line_start":671,"line_end":671,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":85782,"byte_end":85797,"line_start":678,"line_end":678,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":461},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":472},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":105652,"byte_end":105668,"line_start":20,"line_end":20,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":105796,"byte_end":105812,"line_start":28,"line_end":28,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":105903,"byte_end":105919,"line_start":34,"line_end":34,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":106356,"byte_end":106372,"line_start":47,"line_end":47,"column_start":68,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":106568,"byte_end":106584,"line_start":54,"line_end":54,"column_start":50,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107316,"byte_end":107336,"line_start":84,"line_end":84,"column_start":55,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107600,"byte_end":107616,"line_start":94,"line_end":94,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107739,"byte_end":107759,"line_start":101,"line_end":101,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107887,"byte_end":107907,"line_start":109,"line_end":109,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":108005,"byte_end":108025,"line_start":114,"line_end":114,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":108191,"byte_end":108211,"line_start":121,"line_end":121,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":108726,"byte_end":108746,"line_start":137,"line_end":137,"column_start":72,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":109042,"byte_end":109062,"line_start":147,"line_end":147,"column_start":30,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":109255,"byte_end":109272,"line_start":158,"line_end":158,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":109783,"byte_end":109800,"line_start":177,"line_end":177,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":110725,"byte_end":110742,"line_start":210,"line_end":210,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":110817,"byte_end":110834,"line_start":216,"line_end":216,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":648},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":115604,"byte_end":115608,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":121292,"byte_end":121310,"line_start":226,"line_end":226,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":121485,"byte_end":121503,"line_start":235,"line_end":235,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":121938,"byte_end":121956,"line_start":249,"line_end":249,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":126038,"byte_end":126056,"line_start":379,"line_end":379,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":907},{"krate":0,"index":915},{"krate":0,"index":922},{"krate":0,"index":930},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":133254,"byte_end":133272,"line_start":571,"line_end":571,"column_start":52,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":133427,"byte_end":133445,"line_start":577,"line_end":577,"column_start":52,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":133725,"byte_end":133743,"line_start":587,"line_end":587,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":960},{"krate":0,"index":965},{"krate":0,"index":969},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":139546,"byte_end":139564,"line_start":744,"line_end":744,"column_start":102,"column_end":120},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144105,"byte_end":144123,"line_start":110,"line_end":110,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144561,"byte_end":144579,"line_start":124,"line_end":124,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144755,"byte_end":144773,"line_start":130,"line_end":130,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144959,"byte_end":144977,"line_start":137,"line_end":137,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":145310,"byte_end":145328,"line_start":145,"line_end":145,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":146572,"byte_end":146590,"line_start":176,"line_end":176,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":149175,"byte_end":149176,"line_start":253,"line_end":253,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":168889,"byte_end":168897,"line_start":36,"line_end":36,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":169275,"byte_end":169283,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":169566,"byte_end":169572,"line_start":56,"line_end":56,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":169956,"byte_end":169962,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":170260,"byte_end":170274,"line_start":78,"line_end":78,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":170657,"byte_end":170671,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":171186,"byte_end":171194,"line_start":108,"line_end":108,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":171535,"byte_end":171549,"line_start":124,"line_end":124,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":171890,"byte_end":171896,"line_start":140,"line_end":140,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":172324,"byte_end":172335,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":173387,"byte_end":173401,"line_start":196,"line_end":196,"column_start":44,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":173490,"byte_end":173504,"line_start":197,"line_end":197,"column_start":44,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":174024,"byte_end":174044,"line_start":209,"line_end":209,"column_start":44,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":174138,"byte_end":174158,"line_start":213,"line_end":213,"column_start":44,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":174416,"byte_end":174427,"line_start":224,"line_end":224,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":177390,"byte_end":177401,"line_start":315,"line_end":315,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":181246,"byte_end":181257,"line_start":434,"line_end":434,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":183336,"byte_end":183350,"line_start":492,"line_end":492,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":183914,"byte_end":183924,"line_start":512,"line_end":512,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184175,"byte_end":184185,"line_start":523,"line_end":523,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184389,"byte_end":184399,"line_start":534,"line_end":534,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184543,"byte_end":184553,"line_start":544,"line_end":544,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184956,"byte_end":184965,"line_start":561,"line_end":561,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":185215,"byte_end":185224,"line_start":574,"line_end":574,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":185528,"byte_end":185537,"line_start":586,"line_end":586,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":185680,"byte_end":185689,"line_start":596,"line_end":596,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":186509,"byte_end":186526,"line_start":623,"line_end":623,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":189367,"byte_end":189384,"line_start":709,"line_end":709,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":204812,"byte_end":204829,"line_start":1125,"line_end":1125,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":206886,"byte_end":206906,"line_start":1176,"line_end":1176,"column_start":44,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207379,"byte_end":207396,"line_start":1192,"line_end":1192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207572,"byte_end":207592,"line_start":1200,"line_end":1200,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207774,"byte_end":207791,"line_start":1209,"line_end":1209,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207957,"byte_end":207968,"line_start":1215,"line_end":1215,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":210408,"byte_end":210426,"line_start":26,"line_end":26,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":211220,"byte_end":211258,"line_start":58,"line_end":58,"column_start":9,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":212189,"byte_end":212227,"line_start":90,"line_end":90,"column_start":9,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":235415,"byte_end":235419,"line_start":670,"line_end":670,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":235796,"byte_end":235806,"line_start":684,"line_end":684,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301521,"byte_end":301527,"line_start":235,"line_end":235,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302317,"byte_end":302323,"line_start":266,"line_end":266,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302751,"byte_end":302757,"line_start":277,"line_end":277,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303168,"byte_end":303179,"line_start":288,"line_end":288,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303907,"byte_end":303918,"line_start":315,"line_end":315,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":49786,"byte_end":49790,"line_start":1265,"line_end":1265,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1503}},{"kind":"Mod","span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":50048,"byte_end":50058,"line_start":1273,"line_end":1273,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1702}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":20015,"byte_end":20020,"line_start":452,"line_end":452,"column_start":54,"column_end":59},"kind":"SuperTrait","from":{"krate":1,"index":2826},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":20023,"byte_end":20029,"line_start":452,"line_end":452,"column_start":62,"column_end":68},"kind":"SuperTrait","from":{"krate":0,"index":14},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":21872,"byte_end":21886,"line_start":492,"line_end":492,"column_start":58,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":16},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":25526,"byte_end":25540,"line_start":571,"line_end":571,"column_start":5,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":16},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28071,"byte_end":28089,"line_start":628,"line_end":628,"column_start":25,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":75},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28163,"byte_end":28164,"line_start":632,"line_end":632,"column_start":40,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":83},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28266,"byte_end":28267,"line_start":638,"line_end":638,"column_start":46,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28405,"byte_end":28409,"line_start":643,"line_end":643,"column_start":44,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":3936},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":28641,"byte_end":28645,"line_start":652,"line_end":652,"column_start":50,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":3936},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lib.rs","byte_start":31830,"byte_end":31835,"line_start":724,"line_end":724,"column_start":22,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1756},"to":{"krate":1,"index":8728}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","byte_start":54856,"byte_end":54861,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","byte_start":58323,"byte_end":58328,"line_start":124,"line_end":124,"column_start":20,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/futex.rs","byte_start":58469,"byte_end":58474,"line_start":130,"line_end":130,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":186},"to":{"krate":1,"index":3038}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/spin_wait.rs","byte_start":63417,"byte_end":63425,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69153,"byte_end":69167,"line_start":117,"line_end":117,"column_start":23,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69292,"byte_end":69306,"line_start":125,"line_end":125,"column_start":21,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69642,"byte_end":69656,"line_start":136,"line_end":136,"column_start":66,"column_end":80},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":280},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":69849,"byte_end":69863,"line_start":142,"line_end":142,"column_start":50,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":280},"to":{"krate":0,"index":672}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":70569,"byte_end":70583,"line_start":172,"line_end":172,"column_start":24,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":280},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":70755,"byte_end":70773,"line_start":182,"line_end":182,"column_start":23,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":290},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":70898,"byte_end":70916,"line_start":190,"line_end":190,"column_start":21,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71268,"byte_end":71286,"line_start":201,"line_end":201,"column_start":70,"column_end":88},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":290},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71478,"byte_end":71496,"line_start":207,"line_end":207,"column_start":45,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":290},"to":{"krate":1,"index":2727}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71682,"byte_end":71700,"line_start":214,"line_end":214,"column_start":24,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":290},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":71826,"byte_end":71844,"line_start":221,"line_end":221,"column_start":23,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":290},"to":{"krate":1,"index":2446}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72008,"byte_end":72013,"line_start":230,"line_end":230,"column_start":31,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":296},"to":{"krate":1,"index":2833}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72051,"byte_end":72056,"line_start":232,"line_end":232,"column_start":31,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":296},"to":{"krate":1,"index":2821}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72072,"byte_end":72077,"line_start":234,"line_end":234,"column_start":9,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72679,"byte_end":72689,"line_start":256,"line_end":256,"column_start":23,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":301},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":72818,"byte_end":72828,"line_start":263,"line_end":263,"column_start":26,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":301},"to":{"krate":1,"index":3038}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":73560,"byte_end":73564,"line_start":285,"line_end":285,"column_start":10,"column_end":14},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":74156,"byte_end":74160,"line_start":307,"line_end":307,"column_start":10,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":77626,"byte_end":77630,"line_start":403,"line_end":403,"column_start":19,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":275},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":78774,"byte_end":78782,"line_start":434,"line_end":434,"column_start":29,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":286},"to":{"krate":1,"index":2727}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":78963,"byte_end":78971,"line_start":444,"line_end":444,"column_start":10,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":79987,"byte_end":79995,"line_start":479,"line_end":479,"column_start":19,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":286},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":80601,"byte_end":80609,"line_start":493,"line_end":493,"column_start":20,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":286},"to":{"krate":1,"index":2446}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":83977,"byte_end":83985,"line_start":610,"line_end":610,"column_start":19,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":84141,"byte_end":84156,"line_start":619,"line_end":619,"column_start":32,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":272},"to":{"krate":0,"index":699}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":84710,"byte_end":84725,"line_start":639,"line_end":639,"column_start":47,"column_end":62},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":272},"to":{"krate":0,"index":687}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":85670,"byte_end":85685,"line_start":671,"line_end":671,"column_start":17,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":272},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/sync.rs","byte_start":85782,"byte_end":85797,"line_start":678,"line_end":678,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":105652,"byte_end":105668,"line_start":20,"line_end":20,"column_start":23,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":538},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":105796,"byte_end":105812,"line_start":28,"line_end":28,"column_start":24,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":105903,"byte_end":105919,"line_start":34,"line_end":34,"column_start":21,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":106356,"byte_end":106372,"line_start":47,"line_end":47,"column_start":68,"column_end":84},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":106568,"byte_end":106584,"line_start":54,"line_end":54,"column_start":50,"column_end":66},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":672}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107316,"byte_end":107336,"line_start":84,"line_end":84,"column_start":55,"column_end":75},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":2727}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107600,"byte_end":107616,"line_start":94,"line_end":94,"column_start":30,"column_end":46},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":538},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107739,"byte_end":107759,"line_start":101,"line_end":101,"column_start":23,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":107887,"byte_end":107907,"line_start":109,"line_end":109,"column_start":24,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":545},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":108005,"byte_end":108025,"line_start":114,"line_end":114,"column_start":23,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":2446}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":108191,"byte_end":108211,"line_start":121,"line_end":121,"column_start":21,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":108726,"byte_end":108746,"line_start":137,"line_end":137,"column_start":72,"column_end":92},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":545},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":109042,"byte_end":109062,"line_start":147,"line_end":147,"column_start":30,"column_end":50},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":109255,"byte_end":109272,"line_start":158,"line_end":158,"column_start":32,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":535},"to":{"krate":0,"index":699}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":109783,"byte_end":109800,"line_start":177,"line_end":177,"column_start":47,"column_end":64},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":535},"to":{"krate":0,"index":687}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":110725,"byte_end":110742,"line_start":210,"line_end":210,"column_start":17,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":535},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/phase_locker/unsync.rs","byte_start":110817,"byte_end":110834,"line_start":216,"line_end":216,"column_start":6,"column_end":23},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":115604,"byte_end":115608,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":121292,"byte_end":121310,"line_start":226,"line_end":226,"column_start":27,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":121485,"byte_end":121503,"line_start":235,"line_end":235,"column_start":16,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":121938,"byte_end":121956,"line_start":249,"line_end":249,"column_start":35,"column_end":53},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":126038,"byte_end":126056,"line_start":379,"line_end":379,"column_start":13,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":133254,"byte_end":133272,"line_start":571,"line_end":571,"column_start":52,"column_end":70},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":852},"to":{"krate":1,"index":2718}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":133427,"byte_end":133445,"line_start":577,"line_end":577,"column_start":52,"column_end":70},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":852},"to":{"krate":1,"index":2721}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":133725,"byte_end":133743,"line_start":587,"line_end":587,"column_start":13,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy_sequentializer.rs","byte_start":139546,"byte_end":139564,"line_start":744,"line_end":744,"column_start":102,"column_end":120},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":852},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144105,"byte_end":144123,"line_start":110,"line_end":110,"column_start":15,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144561,"byte_end":144579,"line_start":124,"line_end":124,"column_start":49,"column_end":67},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1045},"to":{"krate":1,"index":2718}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144755,"byte_end":144773,"line_start":130,"line_end":130,"column_start":49,"column_end":67},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1045},"to":{"krate":1,"index":2721}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":144959,"byte_end":144977,"line_start":137,"line_end":137,"column_start":46,"column_end":64},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1045},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":145310,"byte_end":145328,"line_start":145,"line_end":145,"column_start":35,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1045},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":146572,"byte_end":146590,"line_start":176,"line_end":176,"column_start":44,"column_end":62},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1045},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/exit_sequentializer.rs","byte_start":149175,"byte_end":149176,"line_start":253,"line_end":253,"column_start":22,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1127},"to":{"krate":0,"index":1037}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":168889,"byte_end":168897,"line_start":36,"line_end":36,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1209},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":169275,"byte_end":169283,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":169566,"byte_end":169572,"line_start":56,"line_end":56,"column_start":28,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1219},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":169956,"byte_end":169962,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":170260,"byte_end":170274,"line_start":78,"line_end":78,"column_start":20,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1229},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":170657,"byte_end":170671,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":171186,"byte_end":171194,"line_start":108,"line_end":108,"column_start":22,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1209},"to":{"krate":0,"index":1239}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":171535,"byte_end":171549,"line_start":124,"line_end":124,"column_start":22,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1229},"to":{"krate":0,"index":1239}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":171890,"byte_end":171896,"line_start":140,"line_end":140,"column_start":22,"column_end":28},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1219},"to":{"krate":0,"index":1239}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":172324,"byte_end":172335,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1903},"to":{"krate":1,"index":8728}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":173387,"byte_end":173401,"line_start":196,"line_end":196,"column_start":44,"column_end":58},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1264},"to":{"krate":1,"index":2833}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":173490,"byte_end":173504,"line_start":197,"line_end":197,"column_start":44,"column_end":58},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1264},"to":{"krate":1,"index":2821}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":174024,"byte_end":174044,"line_start":209,"line_end":209,"column_start":44,"column_end":64},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":2833}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":174138,"byte_end":174158,"line_start":213,"line_end":213,"column_start":44,"column_end":64},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":2821}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":174416,"byte_end":174427,"line_start":224,"line_end":224,"column_start":18,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":177390,"byte_end":177401,"line_start":315,"line_end":315,"column_start":22,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":181246,"byte_end":181257,"line_start":434,"line_end":434,"column_start":18,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":183336,"byte_end":183350,"line_start":492,"line_end":492,"column_start":44,"column_end":58},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1264},"to":{"krate":0,"index":8}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":183914,"byte_end":183924,"line_start":512,"line_end":512,"column_start":19,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184175,"byte_end":184185,"line_start":523,"line_end":523,"column_start":22,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":3038}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184389,"byte_end":184399,"line_start":534,"line_end":534,"column_start":20,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1343},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184543,"byte_end":184553,"line_start":544,"line_end":544,"column_start":19,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":8721}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":184956,"byte_end":184965,"line_start":561,"line_end":561,"column_start":19,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1920},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":185215,"byte_end":185224,"line_start":574,"line_end":574,"column_start":19,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1920},"to":{"krate":1,"index":8721}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":185528,"byte_end":185537,"line_start":586,"line_end":586,"column_start":36,"column_end":45},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1920},"to":{"krate":1,"index":2727}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":185680,"byte_end":185689,"line_start":596,"line_end":596,"column_start":20,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1920},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":186509,"byte_end":186526,"line_start":623,"line_end":623,"column_start":18,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":189367,"byte_end":189384,"line_start":709,"line_end":709,"column_start":22,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":204812,"byte_end":204829,"line_start":1125,"line_end":1125,"column_start":18,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":206886,"byte_end":206906,"line_start":1176,"line_end":1176,"column_start":44,"column_end":64},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":8}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207379,"byte_end":207396,"line_start":1192,"line_end":1192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1374},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207572,"byte_end":207592,"line_start":1200,"line_end":1200,"column_start":22,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207774,"byte_end":207791,"line_start":1209,"line_end":1209,"column_start":37,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1374},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/generic_lazy.rs","byte_start":207957,"byte_end":207968,"line_start":1215,"line_end":1215,"column_start":37,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":210408,"byte_end":210426,"line_start":26,"line_end":26,"column_start":9,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1596},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":211220,"byte_end":211258,"line_start":58,"line_end":58,"column_start":9,"column_end":47},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1606},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":212189,"byte_end":212227,"line_start":90,"line_end":90,"column_start":9,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1618},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":214342,"byte_end":214347,"line_start":143,"line_end":143,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2826},"to":{"krate":0,"index":1642}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":235415,"byte_end":235419,"line_start":670,"line_end":670,"column_start":21,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1927},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/lazy.rs","byte_start":235796,"byte_end":235806,"line_start":684,"line_end":684,"column_start":21,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2066},"to":{"krate":1,"index":3049}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":301521,"byte_end":301527,"line_start":235,"line_end":235,"column_start":13,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302317,"byte_end":302323,"line_start":266,"line_end":266,"column_start":23,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1724},"to":{"krate":1,"index":3025}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":302751,"byte_end":302757,"line_start":277,"line_end":277,"column_start":26,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1724},"to":{"krate":1,"index":3038}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303168,"byte_end":303179,"line_start":288,"line_end":288,"column_start":13,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/sv-97/.cargo/registry/src/github.com-1ecc6299db9ec823/static_init-1.0.1/src/raw_static.rs","byte_start":303907,"byte_end":303918,"line_start":315,"line_end":315,"column_start":23,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1728},"to":{"krate":1,"index":3025}}]}